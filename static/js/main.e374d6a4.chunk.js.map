{"version":3,"sources":["Constants.js","services/auth.service.js","components/layout/Menu.js","components/layout/Header.js","services/auth-header.js","services/api.user.js","components/layout/home/TaxTable.js","components/layout/home/Home.js","components/auth/Login.js","components/layout/about/About.js","components/auth/Register.js","components/auth/user/myPet/AddPetModal.js","components/auth/user/myPet/CardComp.js","components/auth/user/myPet/MyPetBoard.js","components/auth/user/historic/Historic.js","components/auth/user/reserve/SchedulerComponent/EventModal.js","components/auth/user/reserve/SchedulerComponent/SchedulerBasic.js","components/auth/user/reserve/Reserve.js","components/auth/user/account/Settings.js","components/auth/user/Profile.js","components/auth/moderator/reports/ReportsBoard.js","services/api.petsiter.js","components/auth/moderator/reserve/SchedulerComponent/SchedulerOpenReserves.js","components/auth/moderator/reserve/OpenReservesTable/OpenReserveTableComp.js","components/auth/moderator/reserve/Reserve.js","components/auth/moderator/historic/Historic.js","components/auth/moderator/ModeratorBoard.js","services/api.admin.js","components/auth/admin/business/BusinessBoard.js","components/auth/admin/permissions/PermissionsBoard.js","components/auth/admin/AdminBoard.js","components/layout/Content.js","components/layout/Footer.js","index.js"],"names":["PermissionsOptions","No_Permission","Client","Petsiter","Adminstartor","ReserveStatus","ServiceType","PaymentStatus","API_URL_AUTH","API_URL_USER","API_URL_ADMIN","username","password","axios","post","then","response","data","accessToken","console","log","localStorage","setItem","JSON","stringify","removeItem","window","location","href","email","parse","getItem","Menu","props","logOut","bind","getMenuUser","getMenu","getMenuAdmin","getMenuMod","state","showModeratorBoard","showAdminBoard","currentUser","undefined","user","AuthService","getCurrentUser","this","setState","roles","includes","logout","Nav","className","Link","Navbar","fixed","expand","style","backgroundColor","Brand","Toggle","Collapse","id","onClick","Component","Header","authHeader","get","headers","NewPet","NewEvent","TaxTable","serviceTax","ApiUserService","getServiceTaxContent","error","request","message","taxStr","map","tax","type","concat","hours","priceHour","Table","bordered","hover","size","responsive","getPaseoIndTax","getPaseoGroupTax","Home","required","value","role","routeChange","Login","handleLogin","onChangeUsername","onChangePassword","loading","e","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","login","resMessage","toString","onSubmit","ref","c","htmlFor","name","onChange","validations","disabled","display","Button","About","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","AddPetModal","handleDateChange","date","prevState","newPet","age","onFileChange","event","formData","FormData","append","files","file","URL","createObjectURL","photo","handleShow","handleNewPet","handleSetState","closeModal","owner","Date","breed","health","pathology","typePathology","medication","castrated","habits","feedingTime","typeFood","amountFood","hoursActivity","socialization","dog","femaleDog","cat","kids","ride","pullOnTheLeash","anxiety","urbanEnvironment","greenSpace","dogSpace","problemsWithObjects","WalkInGroup","atHome","canBeAlone","howManyHours","itQuiet","separationAnxiety","sleeps","registerPet","addPetModal","show","attributes","checked","res","split","objtName","propName","onClose","title","mypet","Modal","onHide","closeButton","Title","Body","Accordion","defaultActiveKey","Card","as","variant","eventKey","selected","onSelect","withPortal","Image","src","alt","width","height","roundedCircle","typeMedication","Footer","deletePetModal","React","CardComp","Img","Text","openAddPetModal","margin","showEditPet","MyPetBoard","myPetContent","count","rows","des","modal","getMyPets","saveAllMyPetsData","status","Object","assign","allPetContent","reload","pet","confirm","deletePet","content","allMyPetsData","objt","HistoricBoard","EventModal","handleStartDateChange","dateNow","getTime","dateFormated","formatYmd","dataPicker","start","newEvent","handleWalkEndDateChange","forceUpdate","handleEndDateChange","end","calculationInvoice","service","endDate","addHours","walkTime","prototype","h","setHours","getHours","handleCreateEvent","getPet","addPetInreserve","checkInWalk","petChoose","resourceId","comments","bgColor","petSiter","reportId","invoice","priceTotal","priceReserve","numHours","discount","paymentStatus","stayOverAllNight","stayOverSomeNight","datesOfNights","numOfNight","repeatEvent","repeat","dates","indexResource","petId","registerReserve","addEvent","date_ob","getDate","slice","month","getMonth","getFullYear","getMinutes","getSeconds","pets","resourceIdArray","push","parseInt","array","index","indexOf","splice","time","a","Math","ceil","abs","totalPrice","reservePrice","border","textAlign","marginLeft","some","marginBottom","marginTop","dateFormat","showTimeSelect","setMinutes","durationWalk","borderColor","float","events","resources","SchedulerBasic","newEventByButton","newFreshId","viewModel","forEach","item","schedulerData","slotId","slotName","addResource","resource","newFreshName","groupOnly","prevClick","prev","setEvents","nextClick","next","onViewChange","view","setViewType","viewType","showAgenda","isEventPerspective","onSelectDate","setDate","eventClicked","alert","Remove","deleteReserve","saveMyReserves","allReserves","removeEvent","updateEventStart","newStart","updateEventEnd","newEnd","moveEvent","onScrollRight","schedulerContent","maxScrollLeft","ViewTypes","Day","scrollLeft","onScrollLeft","onScrollTop","maxScrollTop","onScrollBottom","toggleExpandFunc","toggleExpandStatus","slotClickedFunc","slot","SchedulerData","moment","format","DATE_FORMAT","Week","locale","setLocaleMoment","setResources","config","resourceName","screen","schedulerWidth","getMyReserves","leftCustomHeader","fontWeight","backend","HTML5Backend","eventItemClick","viewEventClick","viewEventText","viewEvent2Text","viewEvent2Click","_createRenderData","eventId","idx","ReserveBoard","SettingsBoard","Profile","changeComponent","component","hash","allPets","reserves","fontSize","to","ReportsBoard","API_URL_PETSITER","SchedulerOpenReserves","ops1","ops2","allOpenReserves","ApiPetSiterService","getAdminOpenReserves","saveOpenReserves","R","OpenReserveTableComp","striped","colSpan","ModeratorBoard","BusinessBoard","ApiAdminService","PermissionsBoard","usersContent","toSave","getUsersContent","minWidth","obj","createdAt","updatedAt","Dropdown","roleId","keys","P","Item","enable","AdminBoard","Content","Row","md","top","exact","path","BoardModerator","BoardAdmin","ReactDOM","render","Fragment","Container","document","getElementById"],"mappings":"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","file":"static/js/main.e374d6a4.chunk.js","sourcesContent":["\n\nexport const PermissionsOptions = {\n    No_Permission: 0,\n    Client: 1,\n    Petsiter: 2,\n    Adminstartor: 3\n}\nexport const ReserveStatus = {\n    OPEN: 0,\n    ONGOING: 1,\n    WAIT_PAYMENT: 2,\n    CLOSE: 3\n}\n\nexport const ServiceType = {\n    WALK: 0,//Paseo,\n    PLAYGROUNG: 1,//guardería\n    RESIDENCE: 2//residencia\n}\n\nexport const PaymentStatus = {\n    RESERVE_PAYMENT_ON_HOLD: 0,// a espera do pagemnto de reserva\n    RESERVE_PAYMENT_DONE: 1,//pagmento de reserva feito\n    FULL_PAYMENT_ON_HOLD: 2,//a espera do pagamento total,\n    FULL_PAYMENT_DONE : 3//pagamento total feito\n}\n\n// export const API_URL_AUTH = \"http://192.168.0.10:3001/api/auth/pet/\";\n// export const API_URL_AUTH = \"http://localhost:3001/api/auth/pet/\";\n export const API_URL_AUTH = \"https://app-5db88e86-f74e-4442-a7c7-f1e5288bd3e2.cleverapps.io/api/auth/pet/\";\n\n\n// export const API_URL_USER = \"http://192.168.0.10:3001/api/pet/\";\n// export const API_URL_USER = \"http://localhost:3001/api/pet/\";\n export const API_URL_USER = \"https://app-5db88e86-f74e-4442-a7c7-f1e5288bd3e2.cleverapps.io/api/pet/\";\n\n\n// export const API_URL_ADMIN = \"http://192.168.0.10:3001/api/admin/\";\n// export const API_URL_ADMIN = \"http://localhost:3001/api/admin/\";\n export const API_URL_ADMIN = \"https://app-5db88e86-f74e-4442-a7c7-f1e5288bd3e2.cleverapps.io/api/admin/\";\n\n\n// export const API_URL_PETSITER = \"http://192.168.0.10:3001/api/mod/\";\n// export const API_URL_PETSITER = \"http://localhost:3001/api/mod/\";\n export const API_URL_PETSITER = \"https://app-5db88e86-f74e-4442-a7c7-f1e5288bd3e2.cleverapps.io/api/mod/\";\n","import axios from \"axios\";\nimport {API_URL_AUTH} from '../Constants'\n// const API_URL = \"http://192.168.0.10:3001/api/auth/pet/\";\n// const API_URL = \"http://localhost:3001/api/auth/pet/\";\n\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL_AUTH + \"signin\", {\n        username,\n        password\n      })\n      .then(response => {\n        if (response.data.accessToken) {\n          console.log(\"response.data\",response.data);\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n    window.location.href = '/home';\n  }\n\n  register(username, email, password) {\n    console.log(API_URL_AUTH + \"signup\");\n    return axios.post(API_URL_AUTH + \"signup\", {\n      username,\n      email,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n}\n\nexport default new AuthService();\n","import React, { Component } from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n\nimport AuthService from \"../../services/auth.service\";\n\nimport { BiLogIn,BiLogOut } from \"react-icons/bi\";\n\nimport {MdPets}  from \"react-icons/md\"; \n\nimport { GiDogHouse, GiJumpingDog} from \"react-icons/gi\";\n\nexport default class Menu extends Component {\n\n    constructor(props) {\n        super(props);\n        this.logOut = this.logOut.bind(this);\n        this.getMenuUser = this.getMenuUser.bind(this);\n        this.getMenu = this.getMenu.bind(this);\n        this.getMenuAdmin = this.getMenuAdmin.bind(this);\n        this.getMenuMod = this.getMenuMod.bind(this);\n\n        this.state = {\n            showModeratorBoard: false,\n            showAdminBoard: false,\n            currentUser: undefined,\n        };\n    }\n\n    componentDidMount() {\n        const user = AuthService.getCurrentUser();\n\n        if (user) {\n            this.setState({\n                currentUser: user,\n                showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n                showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n            });\n        }\n    }\n\n    logOut() {\n        AuthService.logout();\n        window.location.href = '/';\n    }\n\n    getMenuMod() {\n        return <Nav className=\"mr-auto\">\n            <Nav.Link href=\"mod\"  >Petsiter</Nav.Link>\n        </Nav >\n    }\n    getMenuAdmin() {\n        return <Nav className=\"mr-auto\">\n             <Nav.Link href=\"mod\"  >Petsiter</Nav.Link>\n            <Nav.Link href=\"admin\"  >Administrater</Nav.Link>\n        </Nav >\n    }\n    getMenuUser() {\n        return <Nav className=\"mr-auto\">\n            < Nav.Link href=\"/profile\"><GiJumpingDog/>Profile</Nav.Link>\n        </Nav>\n    }\n\n    getMenu() {\n        return <Nav className=\"mr-auto\">\n            <Nav.Link href=\"about\"><GiDogHouse/>About us</Nav.Link>\n        </Nav>\n\n    }\n    render() {\n        const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n\n        return (\n\n\n            <Navbar className=\" maxSize\" fixed=\"top\" expand=\"lg\" style={{ backgroundColor: '#70db70' }}>\n                <Navbar.Brand href=\"/home\"><MdPets/> COLAS FELICES <MdPets/></Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\" >\n\n                    {currentUser ? (\n                        < Nav className=\"mr-auto\">\n                            {this.getMenu()}\n                            {this.getMenuUser()}\n\n                            {\n                                showAdminBoard ?\n                                this.getMenuAdmin()\n                                :showModeratorBoard?\n                                this.getMenuMod()\n                                :null\n                            }\n                            {/* {showModeratorBoard && (\n                                this.getMenuMod()\n                            )}\n                            {showAdminBoard && (\n                                this.getMenuMod()\n                            )} \n                            {showAdminBoard && (\n                                this.getMenuAdmin()\n                            )} */}\n\n                        </Nav>\n                    ) : (\n                            <Nav className=\"mr-auto\">\n\n                                {this.getMenu()}\n\n                            </Nav>\n                        )}\n\n                    {currentUser ? (\n                        <Nav.Link href=\"logout\" onClick={this.logOut} className=\"ml-auto\" >\n                            <BiLogOut/>Logout <b>[{currentUser.username}]</b>\n                        </Nav.Link>\n\n                    ) : (\n                            <Nav className=\"ml-auto\">\n                                <Nav.Link href=\"login\" ><BiLogIn/>Login</Nav.Link>\n                            </Nav>\n                        )}\n                </Navbar.Collapse>\n\n\n            </Navbar >\n\n        )\n    }\n}\n\n\n","import React, { Component } from 'react'\nimport Menu from './Menu';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div>\n        {/* <Row md={4}>\n          <h1 className=\"center\" style={{minWidth:'100%',margin:'2%'}}>COLAS FELICES</h1>\n        </Row> */}\n        {/* <Row md={4}> */}\n          <Menu />\n        {/* </Row> */}\n      </div>\n\n\n    )\n  }\n}","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (user && user.accessToken) {\n    // return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\n    return {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      \"Accept\": \"application/json\",\n      \"x-access-token\": user.accessToken,\n    }; // for Node.js Express back-end\n  } else {\n    return {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      \"Accept\": \"application/json\",\n    };\n  }\n}\n","import axios from \"axios\";\nimport authHeader from './auth-header';\nimport {API_URL_USER} from '../Constants'\n\n// const API_URL = \"http://192.168.0.10:3001/api/pet/\";\n// const API_URL = \"http://localhost:3001/api/pet/\";\n\n\nclass ApiUserervice {\n\n    getPublicContent() {\n        return axios.get(API_URL_USER + 'all');\n    }\n\n    getServiceTaxContent() {\n        return axios.get(API_URL_USER + 'servicetax');\n    }\n\n    getUserBoard() {\n        return axios.get(API_URL_USER + 'user', { headers: authHeader() });\n    }\n    getMyPets() {\n        return axios.get(API_URL_USER + \"mypets\", { headers: authHeader() });\n    }\n    registerPet(NewPet) {\n        return axios.post(API_URL_USER + \"newpet\", {NewPet}, { headers: authHeader() });\n    }\n    deletePet(id) {\n        return axios.post(API_URL_USER + \"deletePet\", {id}, { headers: authHeader() });\n    }\n    getMyReserves(){\n        return axios.get(API_URL_USER + \"reserves\", { headers: authHeader() });\n    }\n   \n    registerReserve(NewEvent) {\n        return axios.post(API_URL_USER + \"newevent\", {NewEvent}, { headers: authHeader() });\n    }\n    deleteReserve(id) {\n        return axios.post(API_URL_USER + \"deleteEvent\", {id}, { headers: authHeader() });\n    }\n}\nexport default new ApiUserervice();","import React, { Component } from 'react';\n\n\nimport { Table, Dropdown, Button } from 'react-bootstrap';\n\nimport ApiUserService from \"../../../services/api.user\";\n\nexport default class TaxTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            serviceTax: undefined,\n\n        }\n    }\n\n    componentDidMount() {\n\n        ApiUserService.getServiceTaxContent().then(\n            response => {\n                console.log(\"ServiceTax response.data \", response.data)\n\n                this.setState({\n                    serviceTax: response.data\n                });\n            },\n            error => {\n                if (error.response) {\n                    // Request made and server responded\n                    console.log(error.response);\n                    // console.log(error.response.status);\n                    // console.log(error.response.headers);\n\n                } else if (error.request) {\n                    // The request was made but no response was received\n                    console.log(error.request);\n                } else {\n                    // Something happened in setting up the request that triggered an Error\n                    console.log('Error', error.message);\n                }\n\n            }\n        );\n\n    }\n\n    getPaseoIndTax() {\n        if (this.state.serviceTax) {\n            let taxStr = \"Individual        \";\n            this.state.serviceTax.map((tax) => {\n                if (tax.type === \"Paseo_ind\") {\n                    taxStr = taxStr.concat(tax.hours + \"H   -   \" + tax.priceHour + \"€ \")\n                }\n            })\n            return taxStr;\n        } return null;\n    }\n    getPaseoGroupTax() {\n        if (this.state.serviceTax) {\n            let taxStr = \"Grupo        \";\n            this.state.serviceTax.map((tax) => {\n                if (tax.type === \"Paseo_group\") {\n                    taxStr = taxStr.concat(tax.hours + \"H   -   \" + tax.priceHour + \"€ \")\n                }\n            })\n            return taxStr;\n        } return null;\n    }\n    render() {\n\n        const { serviceTax } = this.state;\n        return (\n            <div className=\"center maxSize\"  >\n                <h1 >Tarifas</h1>\n\n                <Table bordered hover size=\"sm\" responsive>\n\n                    <tbody>\n                        <tr >\n                            <td>PASEO</td>\n                        </tr>\n                        <tr>\n                            <td>{this.getPaseoIndTax()}</td>\n                        </tr>\n                        <tr >\n                            <td>{this.getPaseoGroupTax()}</td>\n                        </tr>\n\n                    </tbody>\n                </Table>\n\n                <Table bordered hover size=\"sm\" responsive>\n\n                    <tbody>\n                        <tr >\n                            <td>ALOJAMIENTO</td>\n                        </tr>\n\n                        {\n                            serviceTax && (\n                                serviceTax.map((tax) =>\n\n                                    tax.type === \"aloj\" ? (\n                                        <tr> <td>Hasta 1 - {tax.hours}H    -    {tax.priceHour} € </td> </tr>\n                                    )\n                                    : tax.type === \"aloj_extra\" &&(\n                                        <tr> <td>Extra {tax.hours}H    -    {tax.priceHour} € </td> </tr>\n                                    )\n                                ))\n                        }\n\n                    </tbody>\n                </Table>\n                <Table  bordered hover size=\"sm\" responsive>\n\n                    <tbody>\n                       \n                        <tr >\n                            <td>GUARDARIA</td>\n                        </tr>\n\n                        {\n                            serviceTax && (\n                                serviceTax.map((tax) =>\n\n                                    tax.type === \"gua\"? (\n                                        <tr> <td>Hasta 1 - {tax.hours}H    -    {tax.priceHour} € </td> </tr>\n                                    ):\n                                    tax.type === \"gua_extra\" && (\n                                        <tr> <td>Extra {tax.hours}H    -    {tax.priceHour} € </td> </tr>\n                                    )\n                                ))\n                        }\n\n                    </tbody>\n                </Table>\n\n            </div>\n\n        )\n    }\n}","import React, { Component } from 'react';\n\nimport TaxTableInfo from \"./TaxTable\"\n\nexport default class Home extends Component {\n    render() {\n        return (\n            <div className=\"center maxSize\"  >\n                <h1>HOME home</h1>\n                <TaxTableInfo/>\n            </div>\n\n        )\n    }\n}\n\n\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\n// import { useHistory } from \"react-router-dom\";\nimport Button from 'react-bootstrap/Button';\n\n\nimport AuthService from \"../../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst routeChange = () => {\n  window.location.href = '/register';\n}\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.login(this.state.username, this.state.password).then(\n        () => {\n          window.location.href = '/profile';\n          // this.props.history.push(\"/profile\");\n          // window.location.reload();\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"center col-md-4\" >\n        <h2>LOGIN</h2>\n        <div className=\"card card-container\">\n\n          \n          <Form\n            onSubmit={this.handleLogin}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Login</span>\n              </button>\n            </div>\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n            <Button\n              className=\"maxSize col-md-4 btn btn-light\"\n              onClick={routeChange}\n            >\n              Register\n                </Button>\n          </Form>\n\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class About extends Component {\n    render() {\n        return (\n            <div className=\"center\"  >\n                <h1 >About us</h1>\n            </div> \n\n        )\n    }\n}","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../../services/auth.service\";\n\n\nconst routeChange = () => {\n    window.location.href = '/login';\n}\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\nconst email = value => {\n    if (!isEmail(value)) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This is not a valid email.\n            </div>\n        );\n    }\n};\n\nconst vusername = value => {\n    if (value.length < 3 || value.length > 20) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                The username must be between 3 and 20 characters.\n            </div>\n        );\n    }\n};\n\nconst vpassword = value => {\n    if (value.length < 6 || value.length > 40) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                The password must be between 6 and 40 characters.\n            </div>\n        );\n    }\n};\n\nexport default class Register extends Component {\n    constructor(props) {\n        super(props);\n        this.handleRegister = this.handleRegister.bind(this);\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n\n        this.state = {\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            successful: false,\n            message: \"\"\n        };\n    }\n\n    onChangeUsername(e) {\n        this.setState({\n            username: e.target.value\n        });\n    }\n\n    onChangeEmail(e) {\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    handleRegister(e) {\n        e.preventDefault();\n\n        this.setState({\n            message: \"\",\n            successful: false\n        });\n\n        this.form.validateAll();\n\n        if (this.checkBtn.context._errors.length === 0) {\n            AuthService.register(\n                this.state.username,\n                this.state.email,\n                this.state.password\n            ).then(\n                response => {\n                    this.setState({\n                        message: response.data.message,\n                        successful: true\n                    });\n                },\n                error => {\n                    const resMessage =\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString();\n                    this.setState({\n                        successful: false,\n                        message: resMessage\n                    });\n                }\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"center col-md-4\">\n                 <h2>REGISTER</h2>\n                <div className=\"card card-container\">\n                    {/* <img\n                        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                        alt=\"profile-img\"\n                        className=\"profile-img-card\"\n                    /> */}\n\n                    <Form\n                        onSubmit={this.handleRegister}\n                        ref={c => {\n                            this.form = c;\n                        }}\n                    >\n                        {!this.state.successful && (\n                            <div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"username\">Username</label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"username\"\n                                        value={this.state.username}\n                                        onChange={this.onChangeUsername}\n                                        validations={[required, vusername]}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email\">Email</label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"email\"\n                                        value={this.state.email}\n                                        onChange={this.onChangeEmail}\n                                        validations={[required, email]}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password\">Password</label>\n                                    <Input\n                                        type=\"password\"\n                                        className=\"form-control\"\n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.onChangePassword}\n                                        validations={[required, vpassword]}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                                </div>\n                            </div>\n                        )}\n\n                        {this.state.message && (\n                            <div className=\"form-group\">\n                                <div\n                                    className={\n                                        this.state.successful\n                                            ? \"alert alert-success\"\n                                            : \"alert alert-danger\"\n                                    }\n                                    role=\"alert\"\n                                >\n                                    {this.state.message}\n\n                                </div>\n                                {this.state.successful && (\n                                    <div className=\"form-group\">\n                                        <button className=\"btn btn-primary btn-block\" onClick={routeChange} >Login</button>\n                                    </div>\n                                )}\n                            </div>\n                        )}\n\n                        <CheckButton\n                            style={{ display: \"none\" }}\n                            ref={c => {\n                                this.checkBtn = c;\n                            }}\n                        />\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Modal, Accordion, Card, Button } from 'react-bootstrap';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Image from 'react-bootstrap/Image'\n\n\n\nimport { BiPlusCircle } from \"react-icons/bi\";\n\nimport ApiUserService from \"../../../../services/api.user\";\nimport AuthService from \"../../../../services/auth.service\";\n\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\nexport default class AddPetModal extends React.Component {\n\n    /**\n     * @param props\n     * @param context\n     */\n    constructor(props, context) {\n        super(props, context);\n\n\n        // console.log(\"Props : \", props);\n\n        this.handleShow = this.handleShow.bind(this);\n\n        this.handleNewPet = this.handleNewPet.bind(this);\n\n        this.handleSetState = this.handleSetState.bind(this);\n\n        this.handleDateChange = this.handleDateChange.bind(this);\n\n        this.onFileChange = this.onFileChange.bind(this);\n\n        this.closeModal = this.closeModal.bind(this);\n\n        this.state = {\n\n            successful: false,\n            message: \"\",\n            file: undefined,\n            newPet: {\n                owner: undefined,\n                name: undefined,\n                age: new Date(),\n                photo: undefined,\n                breed: \"\",\n                health: {\n                    pathology: undefined,\n                    typePathology: undefined,\n                    medication: undefined,\n                    castrated: undefined\n                },\n                habits: {\n                    feedingTime: undefined,\n                    typeFood: undefined,\n                    amountFood: undefined,\n                    hoursActivity: undefined\n                },\n                socialization: {\n                    dog: undefined,\n                    femaleDog: undefined,\n                    cat: undefined,\n                    kids: undefined\n                },\n                ride: {\n                    pullOnTheLeash: undefined,\n                    anxiety: undefined,\n                    urbanEnvironment: undefined,\n                    greenSpace: undefined,\n                    dogSpace: undefined,\n                    problemsWithObjects: undefined,\n                    WalkInGroup: undefined\n                },\n                atHome: {\n                    canBeAlone: undefined,\n                    howManyHours: undefined,\n                    itQuiet: undefined,\n                    separationAnxiety: undefined,\n                    sleeps: undefined,\n                }\n            }\n        };\n    }\n\n    componentDidMount() {\n        const user = AuthService.getCurrentUser();\n\n        if (user) {\n            this.setState(prevState => ({\n                newPet: {                   // object that we want to update\n                    ...prevState.newPet,    // keep all other key-value pairs\n                    owner: user.id        // update the value of specific key\n                }\n            }))\n        }\n    }\n\n    handleNewPet(e) {\n        e.preventDefault();\n\n        this.setState({\n            successful: false,\n            message: \"\",\n            loading: true\n        });\n\n        this.form.validateAll();\n\n        // if (this.checkBtn.context._errors.length === 0) {\n        ApiUserService.registerPet(this.state.newPet).then(\n            response => {\n                console.log(\"handleNewPet : \", response.data);\n                this.setState({\n                    message: \"Your pet added with Sussecc!\",\n                    successful: true\n                });\n                this.props.addPetModal(response.data)\n            },\n            error => {\n                console.log(\"handleNewPet Error: \", error);\n                const resMessage =\n                    (error.response &&\n                        error.response.data &&\n                        error.response.data.message) ||\n                    error.message ||\n                    error.toString();\n                this.setState({\n                    successful: false,\n                    message: resMessage\n                });\n            }\n        );\n       \n\n    }\n\n    handleShow() {\n        this.props.show = true;\n    }\n\n    handleSetState(e) {\n        // console.log(\"e : \", e);\n        var value;\n        if (e.target.attributes[0].value === \"checkbox\") {\n            value = e.target.checked;\n        } else {\n            value = e.target.value;\n        }\n        if (e.target.name.includes(\".\")) {\n            var res = e.target.name.split(\".\");\n            var objtName = res[0];\n            var propName = res[1];\n\n            if (objtName.includes(\"health\")) {\n                this.setState(prevState => (\n                    {\n                        newPet: {\n                            ...prevState.newPet,\n                            health: {                   // object that we want to update\n                                ...prevState.newPet.health,    // keep all other key-value pairs\n                                [propName]: value        // update the value of specific key\n                            }\n                        }\n                    }));\n\n            } else if (objtName.includes(\"habits\")) {\n                this.setState(prevState => (\n                    {\n                        newPet: {\n                            ...prevState.newPet,\n                            habits: {                   // object that we want to update\n                                ...prevState.newPet.habits,    // keep all other key-value pairs\n                                [propName]: value        // update the value of specific key\n                            }\n                        }\n                    }));\n\n            }\n\n        } else {\n            // this.setState({ [e.target.name]: e.target.value })\n            this.setState(prevState => ({\n                newPet: {                   // object that we want to update\n                    ...prevState.newPet,    // keep all other key-value pairs\n                    [e.target.name]: value        // update the value of specific key\n                }\n            }))\n        }\n\n    }\n\n\n    handleDateChange = (date) => {\n        this.setState(prevState => ({\n            newPet: {                   // object that we want to update\n                ...prevState.newPet,    // keep all other key-value pairs\n                age: date       // update the value of specific key\n            }\n        }))\n    }\n\n    // On file upload (click the upload button)\n    onFileChange = (event) => {\n\n        // Create an object of formData\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"photo\",\n            event.target.files[0],\n            event.target.files[0].name\n        );\n\n        // console.log(\"Photo formData : \",formData);\n        // console.log(\"Photo FILE : \",this.state.file);\n\n\n        // Details of the uploaded file\n        // console.log(this.state.selectedFile);\n\n        // Request made to the backend api\n        // Send formData object\n        // axios.post(\"api/uploadfile\", formData);\n        this.setState({\n            file: URL.createObjectURL(event.target.files[0])\n        })\n        this.setState(prevState => ({\n            newPet: {                   // object that we want to update\n                ...prevState.newPet,    // keep all other key-value pairs\n                photo: formData       // update the value of specific key\n            }\n        }))\n    };\n\n    closeModal() {\n        this.setState({\n            successful: false,\n            message: \"\",\n            loading: false\n        });\n        this.props.onClose()\n    }\n\n    render() {\n        const { show, title, mypet } = this.props;\n\n        return (\n            <div>\n                <Modal show={show} onHide={() => this.props.onClose()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>{title}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        {/* {console.log(\"mypet\", mypet)} */}\n                        <Form\n                            onSubmit={this.handleNewPet}\n                            ref={c => {\n                                this.form = c;\n                            }}\n                        >\n\n                            {!this.state.successful && (\n                                <div>\n                                    <Accordion defaultActiveKey=\"0\">\n                                        <Card>\n                                            <Card.Header>\n                                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                                                    <span><BiPlusCircle /> Personal</span>\n                                                </Accordion.Toggle>\n                                            </Card.Header>\n                                            <Accordion.Collapse eventKey=\"0\">\n                                                <Card.Body>\n\n\n                                                    <div className=\"form-group\">\n                                                        <label htmlFor=\"username\">Name</label>\n                                                        <Input\n                                                            type=\"text\"\n                                                            className=\"form-control\"\n                                                            name=\"name\"\n                                                            value={mypet ? mypet.name : this.state.newPet.name}\n                                                            onChange={this.handleSetState}\n                                                            validations={[required]}\n\n                                                        />\n                                                    </div>\n\n                                                    <div className=\"form-group\">\n                                                        <label htmlFor=\"username\">Birthday : </label>\n                                                        <DatePicker\n                                                            selected={mypet ? new Date(mypet.age) : this.state.newPet.age}\n                                                            onSelect={this.handleDateChange} //when day is clicked\n                                                            onChange={this.handleDateChange} //only when value has changed\n                                                            withPortal\n                                                        />\n                                                    </div>\n\n                                                    <div className=\"form-group\">\n\n                                                        <input type=\"file\" onChange={this.onFileChange} />\n\n                                                        <div className=\"center\">\n                                                            {\n                                                                this.state.file ?\n                                                                    <Image\n                                                                        src={mypet ? mypet.photo ? mypet.photo : this.state.file : this.state.file}\n                                                                        alt=\"profile-img\"\n                                                                        className=\"profile-img-card\"\n                                                                        style={{ width: '25%', height: '15%' }}\n                                                                        roundedCircle\n                                                                    />\n                                                                    : null\n                                                            }\n                                                        </div>\n                                                    </div>\n\n                                                    <div className=\"form-group\">\n                                                        <label htmlFor=\"username\">Breed</label>\n                                                        <Input\n                                                            type=\"text\"\n                                                            className=\"form-control\"\n                                                            name=\"breed\"\n                                                            value={mypet ? mypet.breed : this.state.newPet.breed}\n                                                            onChange={this.handleSetState}\n                                                            validations={[required]}\n                                                        />\n                                                    </div>\n\n                                                </Card.Body>\n                                            </Accordion.Collapse>\n                                        </Card>\n                                        <Card>\n                                            <Card.Header>\n                                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n                                                    <span><BiPlusCircle /> Pathology</span>\n                                                </Accordion.Toggle>\n                                            </Card.Header>\n                                            <Accordion.Collapse eventKey=\"1\">\n                                                <Card.Body>\n                                                    <div className=\"form-group\">\n                                                        <label htmlFor=\"username\">Have Pathology ?</label>\n                                                        <Input\n                                                            type=\"checkbox\"\n                                                            className=\"form-control\"\n                                                            name=\"health.pathology\"\n                                                            value={this.state.newPet.health.pathology}\n                                                            onChange={this.handleSetState}\n\n                                                        />\n                                                    </div>\n                                                    <div className=\"form-group\">\n                                                        <label htmlFor=\"username\">Type pathology</label>\n                                                        <Input\n                                                            type=\"text\"\n                                                            className=\"form-control\"\n                                                            name=\"health.typePathology\"\n                                                            value={this.state.newPet.health.typePathology}\n                                                            onChange={this.handleSetState}\n                                                            validations={[required]}\n\n                                                        />\n                                                    </div>\n\n\n                                                </Card.Body>\n                                            </Accordion.Collapse>\n                                        </Card>\n\n                                        <Card>\n                                            <Card.Header>\n                                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\n                                                    <span><BiPlusCircle /> Medication</span>\n                                                </Accordion.Toggle>\n                                            </Card.Header>\n                                            <Accordion.Collapse eventKey=\"2\">\n                                                <Card.Body>\n                                                    <div className=\"form-group\">\n                                                        <label htmlFor=\"username\">Take Medication?</label>\n                                                        <Input\n                                                            type=\"checkbox\"\n                                                            className=\"form-control\"\n                                                            name=\"health.medication\"\n                                                            value={this.state.newPet.health.medication}\n                                                            onChange={this.handleSetState}\n\n                                                        />\n                                                    </div>\n                                                    <div className=\"form-group\">\n\n                                                        <label htmlFor=\"username\">Type medication</label>\n                                                        <Input\n                                                            type=\"text\"\n                                                            className=\"form-control\"\n                                                            name=\"health.typeMedication\"\n                                                            value={this.state.newPet.health.typeMedication}\n                                                            onChange={this.handleSetState}\n                                                            validations={[required]}\n\n                                                        />\n                                                    </div>\n\n\n                                                </Card.Body>\n                                            </Accordion.Collapse>\n                                        </Card>\n\n                                        <Card>\n                                            <Card.Header>\n                                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\">\n                                                    <span><BiPlusCircle /> Habits</span>\n                                                </Accordion.Toggle>\n                                            </Card.Header>\n                                            <Accordion.Collapse eventKey=\"3\">\n                                                <Card.Body>\n\n                                                </Card.Body>\n                                            </Accordion.Collapse>\n                                        </Card>\n\n                                        <Card>\n                                            <Card.Header>\n                                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"4\">\n                                                    <span><BiPlusCircle /> Socialization</span>\n                                                </Accordion.Toggle>\n                                            </Card.Header>\n                                            <Accordion.Collapse eventKey=\"4\">\n                                                <Card.Body>\n\n                                                </Card.Body>\n                                            </Accordion.Collapse>\n                                        </Card>\n\n                                        <Card>\n                                            <Card.Header>\n                                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"5\">\n                                                    <span><BiPlusCircle /> On Ride</span>\n                                                </Accordion.Toggle>\n                                            </Card.Header>\n                                            <Accordion.Collapse eventKey=\"5\">\n                                                <Card.Body>\n\n                                                </Card.Body>\n                                            </Accordion.Collapse>\n                                        </Card>\n\n                                        <Card>\n                                            <Card.Header>\n                                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"6\">\n                                                    <span><BiPlusCircle /> At Home</span>\n                                                </Accordion.Toggle>\n                                            </Card.Header>\n                                            <Accordion.Collapse eventKey=\"6\">\n                                                <Card.Body>\n\n                                                </Card.Body>\n                                            </Accordion.Collapse>\n                                        </Card>\n\n                                        {/* <Card>\n                                            <Card.Header>\n                                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\n                                                    <span><BiPlusCircle /> Medication</span>\n                                                </Accordion.Toggle>\n                                            </Card.Header>\n                                            <Accordion.Collapse eventKey=\"2\">\n                                                <Card.Body> \n                                                    \n                                                </Card.Body>\n                                            </Accordion.Collapse>\n                                        </Card> */}\n                                    </Accordion>\n\n\n\n                                    {/* <div className=\"form-group\">\n                                        <label htmlFor=\"username\">Breed</label>\n                                        <Input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            name=\"username\"\n                                            value={this.state.newPet.breed}\n                                            onChange={this.onChangeBreed}\n                                            validations={[required]}\n                                        />\n                                    </div> */}\n\n                                    <div className=\"form-group\">\n                                        <button\n                                            className=\"btn btn-success btn-block center\"\n                                            disabled={this.state.loading}\n                                            style={{ width: '50%' }}\n                                        >\n                                            {this.state.loading && (\n                                                <span className=\"spinner-border spinner-border-sm\"></span>\n                                            )}\n                                            <span>{mypet ? \"Edit\" : \"Add\"}</span>\n                                        </button>\n                                    </div>\n                                </div>\n                            )}\n\n                            {this.state.message && (\n                                <div className=\"form-group\">\n                                    {this.state.successful ?\n                                        <div className=\"alert alert-success\" role=\"alert\">\n                                            {this.state.message}\n                                        </div>\n                                        :\n                                        <div className=\"alert alert-danger\" role=\"alert\">\n                                            {this.state.message}\n                                        </div>}\n                                </div>\n                            )}\n                            <CheckButton\n                                style={{ display: \"none\" }}\n                                ref={c => {\n                                    this.checkBtn = c;\n                                }}\n                            />\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        {\n                            mypet ?\n                                <Button variant=\"danger\" onClick={() => this.props.deletePetModal(mypet)}>Delete</Button>\n                                : null\n                        }\n                        <Button type=\"button\" variant=\"primary\" onClick={() => this.closeModal()}>Close</Button>\n                    </Modal.Footer>\n                </Modal>\n\n            </div>\n        );\n    }\n}\n\n\n","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nimport { BiPlusCircle, BiEraser, BiShow } from \"react-icons/bi\";\n\n\nexport default class CardComp extends Component {\n\n//     <img\n//     src={mypet ? mypet.photo : this.state.file}\n//     alt=\"profile-img\"\n//     className=\"profile-img-card\"\n//     style={{ width: '25%', height: '15%' }}\n//     roundedCircle\n// />\n\n    render() {\n        // console.log(this.props);\n        return (\n            <Card className=\"cardPet\"  >\n                {\n                    this.props.mypet.type ?\n                        <Card.Img variant=\"top\" src=\"//ssl.gstatic.com/accounts/ui/avatar_1x.png\" />\n                        :\n                        this.props.mypet.photo ?\n                            <Card.Img variant=\"top\" src={this.props.mypet.photo} />\n                            :\n                            <Card.Img variant=\"top\" src=\"//ssl.gstatic.com/accounts/ui/avatar_1x.png\" />\n                }\n\n                <Card.Body>\n                    <Card.Title>{this.props.mypet.name}</Card.Title>\n                    {\n                        this.props.mypet.type ?\n                            null\n                            : \n                            <Card.Text>\n                                BitehDay: {this.props.mypet.age}\n                            </Card.Text>\n                    }\n                    {\n                        this.props.mypet.type ?\n                            <Button variant=\"primary\" onClick={this.props.openAddPetModal} style={{ margin: '5%' }} ><BiPlusCircle />  </Button>\n                            :\n                            <div>\n                                <Button variant=\"primary\" onClick={() => this.props.showEditPet(this.props.mypet)}  ><BiShow />  </Button>\n                                <Button variant=\"danger\" onClick={() => this.props.deletePetModal(this.props.mypet)}  ><BiEraser />  </Button>\n                            </div>\n                    }\n\n                </Card.Body>\n            </Card>\n\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nimport AddPetModel from './AddPetModal';\nimport CardPet from './CardComp';\nimport './MyPetBoard.css';\n\nimport AuthService from \"../../../../services/auth.service\";\nimport ApiUserService from \"../../../../services/api.user\";\n\n\n\nexport default class MyPetBoard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.openAddPetModal = this.openAddPetModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.deletePetModal = this.deletePetModal.bind(this);\n        this.addPetModal = this.addPetModal.bind(this);\n        this.showEditPet = this.showEditPet.bind(this);\n\n        this.state = {\n            currentUser: undefined,\n            myPetContent: {\n                count: 0,\n                rows: [undefined]\n            },\n            mypet: {\n                name: \"Add your pet\",\n                des: \"Click where ...\",\n                type: \"apdpet\"\n            },\n           \n            modal: {\n                title: 'My Pet!',\n                show: false,\n                showEditPet: { undefined }\n            },\n        };\n\n    }\n\n\n    componentDidMount() {\n        const user = AuthService.getCurrentUser();\n        if (user) {\n\n            this.setState({\n                currentUser: user,\n\n            });\n\n            ApiUserService.getMyPets().then(\n                response => {\n                    console.log(\"response.data \", response.data)\n                    this.props.saveAllMyPetsData(response.data);\n                    this.setState({\n                        myPetContent: response.data\n                    });\n                },\n                error => {\n                    if (error.response) {\n                        // Request made and server responded\n                        console.log(error.response);\n                        // console.log(error.response.status);\n                        // console.log(error.response.headers);\n                        if(error.response.status === 401){\n                            AuthService.logout();\n                        }\n                      } else if (error.request) {\n                        // The request was made but no response was received\n                        console.log(error.request);\n                      } else {\n                        // Something happened in setting up the request that triggered an Error\n                        console.log('Error', error.message);\n                      }\n                  \n                }\n            ) ;\n        }\n    }\n\n\n    closeModal() {\n        this.setState(prevState => {\n            let modal = Object.assign({}, prevState.modal);  // creating copy of state variable jasper\n            modal.show = false;                     // update the name property, assign a new value                 \n            return { modal };                                 // return new object jasper object\n        })\n    }\n\n    openAddPetModal() {\n        this.setState(prevState => {\n            let modal = Object.assign({}, prevState.modal);  // creating copy of state variable jasper\n            modal.show = true;\n            modal.showEditPet = undefined;                  // update the name property, assign a new value                 \n            return { modal };                                 // return new object jasper object\n        })\n    }\n\n    addPetModal(allPetContent) {\n        this.setState({\n            myPetContent: allPetContent\n        });\n        window.location.reload(false);\n    }\n    deletePetModal(pet) {\n\n        // console.log(\"delete:\", pet);\n        if (window.confirm(`Do you want to delete this Pet? {Name: ${pet.name}, Breed: ${pet.breed}}`)) {\n\n            ApiUserService.deletePet(pet.id).then(\n                response => {\n                    console.log(\"response.data \", response.data)\n                    this.setState({\n                        myPetContent: response.data\n                    });\n                    window.location.reload(false);\n                },\n                error => {\n                    this.setState({\n                        content:\n                            (error.response &&\n                                error.response.data &&\n                                error.response.data.message) ||\n                            error.message ||\n                            error.toString()\n                    });\n                }\n            );\n        }\n    }\n\n    showEditPet(mypet) {\n\n        this.setState(prevState => ({\n            modal: {\n                ...prevState.modal,\n                show: true,\n                showEditPet: {\n                    id: mypet.id,\n                    owner: mypet.owner,\n                    name: mypet.name,\n                    age: mypet.age,\n                    photo: mypet.photo,\n                    breed: mypet.breed\n                }\n            }\n        }))\n\n\n    }\n    componentWillUnmount() {\n        this.props.saveAllMyPetsData(this.state.myPetContent)\n    }\n\n    render() {\n        const { allMyPetsData } = this.props;\n        return (\n            <div className=\" center\">\n\n                <AddPetModel\n                    title={this.state.modal.title}\n                    show={this.state.modal.show}\n                    onClose={this.closeModal}\n                    mypet={this.state.modal.showEditPet}\n                    addPetModal={this.addPetModal}\n                    deletePetModal={this.deletePetModal}\n                />\n\n                <div className=\" card card-container container-myPets cardsPetsContainer\" >\n\n                    {(allMyPetsData && allMyPetsData.count > 0) ? (\n\n                        allMyPetsData.rows.map((objt) =>\n\n                            <CardPet mypet={objt} openAddPetModal={this.openAddPetModal} showEditPet={this.showEditPet} deletePetModal={this.deletePetModal} />\n                        )\n                    ) : null\n                    }\n                    <CardPet mypet={this.state.mypet} openAddPetModal={this.openAddPetModal} deletePetModal={this.deletePetModal} />\n\n\n                </div>\n\n\n\n            </div >\n\n\n        )\n    }\n}\n\n\n","import React, { Component } from 'react';\n\nexport default class HistoricBoard extends Component {\n    render() {\n        return (\n            <div className=\"center\"  >\n                <h1 >Historic </h1>\n            </div> \n\n        )\n    }\n}","import React from 'react';\nimport { Modal, Dropdown, Button, } from 'react-bootstrap';\n// import { Form, Input, CheckButton ,Textarea} from 'react-validation';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport setHours from \"date-fns/setHours\";\nimport setMinutes from \"date-fns/setMinutes\";\n\nimport { ReserveStatus, ServiceType, PaymentStatus } from '../../../../../Constants'\n\n// import { BiPlusCircle } from \"react-icons/bi\";\n\nimport ApiUserService from \"../../../../../services/api.user\";\n// import AuthService from \"../../../../services/auth.service\";\n\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\nexport default class EventModal extends React.Component {\n\n    /**\n     * @param props\n     * @param context\n     */\n    constructor(props, context) {\n        super(props, context);\n\n        Date.prototype.addHours = function (h) {\n            this.setHours(this.getHours() + h);\n            return this;\n        }\n\n        this.handleShow = this.handleShow.bind(this);\n        this.handleCreateEvent = this.handleCreateEvent.bind(this);\n        this.handleStartDateChange = this.handleStartDateChange.bind(this);\n        this.handleSetState = this.handleSetState.bind(this);\n        this.getPet = this.getPet.bind(this);\n        this.formatYmd = this.formatYmd.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.addPetInreserve = this.addPetInreserve.bind(this);\n        this.checkInWalk = this.checkInWalk.bind(this);\n        this.handleWalkEndDateChange = this.handleWalkEndDateChange.bind(this);\n        this.calculationInvoice = this.calculationInvoice.bind(this);\n\n        this.state = {\n            petChoose: [undefined],\n            dataPicker: {\n                start: new Date(),\n                end: new Date().addHours(1),\n            },\n            successful: false,\n            message: \"\",\n            // newEvent: {\n            //     id: undefined,\n            //     title: \"RESERVE\",\n            //     start: undefined,\n            //     end: undefined,\n            //     resourceId: undefined,\n            //     bgColor: \"purple\",\n            //     status: ReserveStatus.OPEN,\n            //     price: undefined,\n            //     comments: undefined,\n            //     numHours: undefined,\n            //     petSiter: undefined,\n            //     reportId: undefined,\n            //     discount: undefined,\n            //     serviceType: undefined,\n            //     stayOverAllNight: true,\n            //     stayOverSomeNight: false,\n            //     walkTime: 1\n\n            // },\n\n            newEvent: {\n                id: undefined,\n                resourceId: undefined,\n                title: \"RESERVE\",\n                comments: undefined,\n                start: undefined,\n                end: undefined,\n                bgColor: \"purple\",\n                status: ReserveStatus.OPEN,\n                petSiter: undefined,\n                reportId: undefined,\n                invoice: {\n                    priceTotal: undefined,\n                    priceReserve: undefined,\n                    numHours: undefined,\n                    discount: undefined,\n                    paymentStatus: PaymentStatus.RESERVE_PAYMENT_ON_HOLD\n                },\n                service: {\n                    type: undefined,\n                    stayOverAllNight: true,\n                    stayOverSomeNight: false,\n                    datesOfNights: [undefined],\n                    numOfNight: 0,\n                    walkTime: 1,\n                }\n\n            },\n            repeatEvent: {\n                repeat: false,\n                dates: []\n            }\n\n        };\n\n\n\n\n    }\n    componentDidMount() {\n        this.calculationInvoice();\n    }\n\n    handleCreateEvent(e) {\n        e.preventDefault();\n        // console.log(\"before \", this.state.newEvent);\n        if (this.state.newEvent.numHours === undefined\n            || this.props.event.resourceId.length < 1\n            || this.state.newEvent.start === undefined\n            || this.state.newEvent.end === undefined\n\n        ) {\n            if (window.confirm('Please complete all fiels to continue the reserve ...')) {\n\n            }\n        } else {\n            let indexResource = this.props.event.id;\n            indexResource--;\n            this.props.event.resourceId.map((petId) => {\n\n                //title\n                this.state.newEvent.title = \" Reserved \";\n                // set id\n                this.state.newEvent.id = ++indexResource;\n                // set recurse id\n                this.state.newEvent.resourceId = petId;\n\n\n                this.setState({\n                    successful: false,\n                    message: \"\",\n                    loading: true\n                });\n\n                this.form.validateAll();\n\n                console.log(this.state.newEvent);\n                ApiUserService.registerReserve(this.state.newEvent).then(\n                    response => {\n                        console.log(\"handleNewEvent : \", response.data);\n                        this.setState({\n                            message: \"Your reserve added with Sussecc!\",\n                            successful: true\n                        });\n                        this.props.addEvent(this.state.newEvent);\n                    },\n                    error => {\n                        console.log(\"handleNewPet Error: \", error);\n                        const resMessage =\n                            (error.response &&\n                                error.response.data &&\n                                error.response.data.message) ||\n                            error.message ||\n                            error.toString();\n                        this.setState({\n                            successful: false,\n                            message: resMessage\n                        });\n                    }\n                );\n\n            })\n\n\n\n        }\n\n\n\n        // } else {\n        //     this.setState({\n        //         loading: false\n        //     });\n        // }\n    }\n\n    handleShow() {\n        this.props.show = true;\n    }\n\n\n    handleStartDateChange = (date) => {\n\n        let dateNow = new Date();\n        if (date.getTime() < dateNow.getTime()) {\n            this.setState({\n                successful: false,\n                message: \"Date Start is not valide\"\n            });\n        } else {\n            let dateFormated = this.formatYmd(date);\n            this.setState(prevState => ({\n                dataPicker: {\n                    ...prevState.dataPicker,\n                    start: date\n                },\n                newEvent: {\n                    ...prevState.newEvent,\n                    start: dateFormated\n                }\n            }))\n\n            this.handleWalkEndDateChange(date);\n            this.forceUpdate();\n        }\n    }\n\n\n    handleEndDateChange = (date) => {\n        let dateFormated = this.formatYmd(date);\n\n        // var hours = Math.ceil(Math.abs(this.state.dataPicker.start - date) / 36e5);\n        // var totalPrice = hours * 5;\n        this.setState(prevState => ({\n            dataPicker: {\n                ...prevState.dataPicker,\n                end: date\n            },\n            newEvent: {\n                ...prevState.newEvent,\n                end: dateFormated\n            }\n        }))\n\n        this.calculationInvoice();\n    }\n\n    handleWalkEndDateChange = (date) => {\n        if (this.state.newEvent.service.type === ServiceType.WALK) {\n            let endDate = new Date(date).addHours(this.state.newEvent.service.walkTime);\n            if (endDate) {\n                this.setState(prevState => ({\n                    dataPicker: {\n                        ...prevState.dataPicker,\n                        end: endDate\n                    },\n                    newEvent: {\n                        ...prevState.newEvent,\n                        service: {\n                            ...prevState.newEvent.service,\n                            end: endDate\n                        }\n                    }\n                }))\n                this.calculationInvoice();\n            }\n\n        }\n    }\n    formatYmd(date_ob) {\n        // adjust 0 before single digit date\n        let date = (\"0\" + date_ob.getDate()).slice(-2);\n        // current month\n        let month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\n        // current year\n        let year = date_ob.getFullYear();\n        // current hours\n        let hours = date_ob.getHours();\n        // current minutes\n        let minutes = date_ob.getMinutes();\n        // current seconds\n        let seconds = date_ob.getSeconds();\n        // prints date & time in YYYY-MM-DD HH:MM:SS format\n        // console.log(year + \"-\" + month + \"-\" + date + \" \" + hours + \":\" + minutes + \":\" + seconds);\n        return year + \"-\" + month + \"-\" + date + \" \" + hours + \":\" + minutes + \":\" + seconds;\n    }\n\n    handleSetState(e) {\n        var value = e.target.value;\n        var propName = e.target.name;\n        // console.log(\"propName : \", propName);\n        // console.log(\"value : \", value);\n        this.setState(prevState => ({\n            newEvent: {\n                ...prevState.newEvent,\n                [e.target.name]: value\n            }\n        }));\n    }\n\n    getPet() {\n        if (this.props.event !== undefined) {\n            return this.props.event.pets.map((pet) => {\n                if (pet.id === this.props.event.resourceId) {\n                    this.state.petChoose = pet;\n                    return <label id=\"resourceId\" htmlFor=\"username\">{pet.name}</label>\n\n                }\n            }\n            )\n        }\n\n    }\n\n    addPetInreserve(e) {\n\n        if (this.props.event !== undefined) {\n            if (e.target.checked) {\n                //add\n                let resourceIdArray = this.props.event.resourceId;\n                resourceIdArray.push(parseInt(e.target.value));\n                this.props.event.resourceId = resourceIdArray;\n                // console.log(\"add \",this.props.event.resourceId);\n            } else {\n                //remove\n                let array = this.props.event.resourceId;\n                var index = array.indexOf(parseInt(e.target.value));\n                // console.log(\"index\",index,this.props.event.resourceId,e.target.value);\n                if (index !== -1) {\n                    array.splice(index, 1);\n                    this.props.event.resourceId = array;\n                    // console.log(\"remove\",this.props.event.resourceId);\n                }\n            }\n            this.forceUpdate();\n        }\n    }\n    closeModal() {\n        this.setState({\n            successful: false,\n            message: \"\",\n            loading: false\n        });\n        this.props.onClose()\n    }\n\n    checkInWalk() {\n        if (this.state.newEvent.start !== undefined) {\n            let hours = new Date(this.state.newEvent.start).getHours();\n            // console.log(\"hours :\", hours);\n            if (hours => 20) {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            return false;\n        }\n\n    }\n    async durationWalk(time) {\n        if (this.state.dataPicker.start) {\n            await this.setState(\n                prevState => ({\n                    newEvent: {\n                        ...prevState.newEvent,\n                        service: {\n                            ...prevState.newEvent.service,\n                            walkTime: time\n                        }\n                    }\n                })\n            )\n            this.handleWalkEndDateChange(this.state.dataPicker.start);\n            this.forceUpdate();\n\n        }\n    }\n\n    calculationInvoice() {\n        var hours = Math.ceil(Math.abs(this.state.dataPicker.start - this.state.dataPicker.end) / 36e5);\n        var totalPrice = hours * 5;\n        var reservePrice = totalPrice * 0.1;\n        this.setState(prevState => ({\n            newEvent: {\n                ...prevState.newEvent,\n                invoice: {\n                    ...prevState.newEvent.invoice,\n                    numHours: hours,\n                    priceTotal: totalPrice,\n                    priceReserve: reservePrice\n                }\n\n            }\n        }))\n    }\n\n    render() {\n        const { show, title, type, event } = this.props;\n        // { console.log(\"this.props \", this.props) }\n        // { console.log(\"type \", type) }\n        { console.log(\"State \", this.state) }\n\n        return (\n            <div>\n                <Modal show={show} onHide={() => this.props.onClose()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>{title}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <Form\n                            onSubmit={this.handleCreateEvent}\n                            ref={c => {\n                                this.form = c;\n                            }}\n                        >\n\n\n                            {!this.state.successful && (\n                                <div>\n                                    <div className=\"form-group\" style={{ border: '1px solid #eee' }}>\n                                        {/* Pets of this reserve */}\n                                        <label style={{ border: '1px solid #eee', width: '100%', textAlign: 'center' }} >Pets[{this.props.event ? this.props.event.resourceId.length : 0}]</label>\n                                        {event && (\n                                            event.pets && (\n                                                <div className=\"form-group\" style={{ marginLeft: '10%' }}>\n\n                                                    {event.pets.rows.map((pet) =>\n                                                        <label style={{ width: '50%' }}>\n                                                            <input\n                                                                type=\"checkbox\"\n                                                                className=\"form-check-input\"\n                                                                name=\"checkboxPetReserve\"\n                                                                checked={\n                                                                    this.props.event.resourceId.some(id => pet.id === id) ? true : false}\n                                                                onChange={this.addPetInreserve}\n                                                                value={pet.id}\n                                                            />\n                                                            {pet.name}\n                                                        </label>\n                                                    )}\n                                                </div>\n                                            )\n                                        )\n                                        }\n                                    </div>\n                                    {/* Choose service type */}\n                                    <label style={{ border: '1px solid #eee', width: '100%', marginBottom: '0px', textAlign: 'center' }}>Tipo de servicio</label>\n                                    <div className=\"form-group center\"\n                                        style={{ border: '1px solid #eee', display: '-webkit-box', width: '100%', marginTop: '0px' }} >\n\n                                        <div className=\"form-group\" style={{ marginTop: '2%', width: '45%' }}>\n                                            <label>\n                                                <input\n                                                    type=\"checkbox\"\n                                                    className=\"form-check-input\"\n                                                    name=\"serviceTypePaseo\"\n                                                    checked={\n                                                        this.state.newEvent.service.type === ServiceType.WALK ? true\n                                                            : null\n                                                    }\n                                                    onChange={() => this.setState(\n                                                        prevState => ({\n                                                            newEvent: {\n                                                                ...prevState.newEvent,\n                                                                service: {\n                                                                    ...prevState.newEvent.service,\n                                                                    type: ServiceType.WALK\n                                                                }\n                                                            }\n                                                        })\n                                                    )}\n                                                />\n                                          Paseo\n                                        </label>\n                                        </div>\n                                        <div className=\"form-group\" style={{ marginTop: '2%', width: '45%' }}>\n                                            <label >\n                                                <input\n                                                    type=\"checkbox\"\n                                                    className=\"form-check-input\"\n                                                    name=\"serviceTypePLAY&RES\"\n                                                    checked={\n                                                        this.state.newEvent.service.type === ServiceType.RESIDENCE ? true\n                                                            : this.state.newEvent.service.type === ServiceType.PLAYGROUNG ? true\n                                                                : null\n                                                    }\n                                                    onChange={() => this.setState(\n                                                        prevState => ({\n                                                            newEvent: {\n                                                                ...prevState.newEvent,\n                                                                service: {\n                                                                    ...prevState.newEvent.service,\n                                                                    type: ServiceType.RESIDENCE\n                                                                }\n                                                            }\n                                                        })\n                                                    )}\n                                                />\n                                          Guardería / Residencia\n                                        </label>\n                                        </div>\n                                    </div>\n\n                                    {/* \n                                    Service type = WALK \n                                     ->Day- Hour to start\n                                     ->Number of hour [min = 1, max = 2]\n                                     ->repeat this reserve to more days\n                                    */}\n                                    {\n                                        this.state.newEvent.service.type === ServiceType.WALK && (\n                                            <div className=\"form-group\" style={{ border: '1px solid #eee', textAlign: 'center' }}>\n                                                <label style={{ border: '1px solid #eee', width: '100%' }}>Paseo</label>\n                                                <div className=\"form-group center\" >\n\n                                                    <div className=\"form-group center\" style={{ border: '1px solid #eee', width: '100%' }} >\n                                                        <label style={{ border: '1px solid #eee', width: '100%', marginBottom: '0px' }}>Check-In</label>\n                                                        <DatePicker\n                                                            // dateFormat=\"yyyy/MM/dd\"\n                                                            dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                                            selected={this.state.dataPicker.start}\n                                                            onChange={this.handleStartDateChange}\n                                                            showTimeSelect\n                                                            dateFormat=\"Pp\"\n                                                            minDate={new Date()}\n                                                            // maxDate={addMonths(new Date(), 5)}\n                                                            minTime={setHours(setMinutes(new Date(), 0), 8)}\n                                                            maxTime={setHours(setMinutes(new Date(), 0), 20)}\n                                                            withPortal\n                                                        />\n\n                                                    </div>\n                                                    <div className=\"form-group center\" style={{ border: '1px solid #eee', width: '100%' }} >\n                                                        <label style={{ border: '1px solid #eee', width: '100%', marginBottom: '0px' }}>Check-out</label>\n                                                        <DatePicker\n                                                            // dateFormat=\"yyyy/MM/dd\"\n                                                            dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                                            selected={this.state.dataPicker.end}\n                                                            onChange={this.handleEndDateChange}\n                                                            showTimeSelect\n                                                            dateFormat=\"Pp\"\n                                                            minDate={new Date()}\n                                                            // maxDate={addMonths(new Date(), 5)}\n                                                            withPortal\n                                                            disabled\n                                                        />\n\n                                                    </div>\n\n                                                    <label style={{ border: '1px solid #eee', width: '100%', marginBottom: '0px' }}>Duración</label>\n                                                    <div className=\"form-group\" style={{ border: '1px solid #eee', display: '-webkit-box', width: '100%' }} >\n                                                        <div className=\"form-group\" style={{ width: '45%' }}  >\n                                                            <label >\n                                                                <input\n                                                                    type=\"checkbox\"\n                                                                    className=\"form-check-input\"\n                                                                    name=\"serviceTypeWalkDuration1\"\n                                                                    checked={\n                                                                        this.state.newEvent.service.walkTime === 1 ? true\n                                                                            : this.state.newEvent.service.type === undefined ? false\n                                                                                : false\n                                                                    }\n                                                                    onChange={() => this.durationWalk(1)}\n                                                                />\n                                                        1 Hora\n                                                        </label>\n                                                        </div>\n                                                        <div className=\"form-group\" style={{ width: '45%' }}  >\n                                                            <label >\n                                                                <input\n                                                                    type=\"checkbox\"\n                                                                    className=\"form-check-input\"\n                                                                    name=\"serviceTypeWalkDuration2\"\n                                                                    checked={\n                                                                        this.state.newEvent.service.walkTime === 2 ? true\n                                                                            : this.state.newEvent.service.type === undefined ? false\n                                                                                : false\n                                                                    }\n                                                                    onChange={() => this.durationWalk(2)}\n\n                                                                    disabled={\n                                                                        this.checkInWalk()\n                                                                    }\n                                                                />\n                                                            2 Horas\n                                                            </label>\n                                                        </div>\n                                                    </div>\n\n                                                    <div className=\"form-group center\" style={{ width: '100%' }}  >\n                                                        <label >\n                                                            <input\n                                                                type=\"checkbox\"\n                                                                className=\"form-check-input\"\n                                                                name=\"repeatEvent\"\n                                                                checked={\n                                                                    this.state.repeatEvent.repeat\n                                                                }\n                                                                onChange={() => this.setState(\n                                                                    prevState => ({\n                                                                        repeatEvent: {\n                                                                            ...prevState.repeatEvent,\n                                                                            repeat: !this.state.repeatEvent.repeat\n                                                                        }\n                                                                    })\n                                                                )}\n\n                                                            />\n                                                            ¿Quieres hacer una reserva similar para otros días?\n                                                            </label>\n\n                                                        {this.state.repeatEvent.repeat && (\n                                                            <div className=\"form-group center\" style={{ border: '1px solid #eee', width: '100%' }} >\n                                                                <label style={{ border: '1px solid #eee', width: '100%', marginBottom: '0px' }}>Copy reserve</label>\n                                                                <DatePicker\n                                                                    // dateFormat=\"yyyy/MM/dd\"\n                                                                    dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                                                    selected={this.state.dataPicker.start}\n                                                                    onChange={this.handleStartDateChange}\n                                                                    \n                                                                    dateFormat=\"Pp\"\n                                                                    minDate={new Date()}\n                                                                    // maxDate={addMonths(new Date(), 5)}\n                                                                    minTime={setHours(setMinutes(new Date(), 0), 8)}\n                                                                    maxTime={setHours(setMinutes(new Date(), 0), 20)}\n                                                                    withPortal\n                                                                />\n\n                                                            </div>\n                                                        )}\n                                                    </div>\n\n                                                    <div className=\"form-group center\" style={{ border: '1px solid #eee', borderColor: '#92a8d1', width: '80%' }} >\n                                                        <div className=\"form-group center\" style={{ margin: '0px' }} >\n                                                            <label style={{ float: 'left', width: '35%' }}>Horas</label>\n                                                            <label style={{ float: 'center', width: '30%' }}>...</label>\n                                                            <label style={{ float: 'right', width: '35%' }}>{this.state.newEvent.invoice.numHours === undefined ? 0 : this.state.newEvent.invoice.numHours}</label>\n                                                        </div>\n                                                        <div className=\"form-group center\" style={{ margin: '0px' }} >\n                                                            <label style={{ float: 'left', width: '35%' }}>Discount</label>\n                                                            <label style={{ float: 'center', width: '30%' }}>...</label>\n                                                            <label style={{ float: 'right', width: '35%' }}>{this.state.newEvent.invoice.discount === undefined ? 0 : this.state.newEvent.invoice.discount}</label>\n                                                        </div>\n\n                                                        <div className=\"form-group center\" style={{ margin: '0px' }} >\n                                                            <label style={{ float: 'left', width: '35%' }}>Pets</label>\n                                                            <label style={{ float: 'center', width: '30%' }}>...</label>\n                                                            <label style={{ float: 'right', width: '35%' }}>{this.props.event.resourceId === undefined ? 0 : this.props.event.resourceId.length}</label>\n                                                        </div>\n                                                        <div className=\"form-group center\" style={{ margin: '0px' }} >\n                                                            <label style={{ float: 'left', width: '35%' }}>Total</label>\n                                                            <label style={{ float: 'center', width: '30%' }}>...</label>\n                                                            <label style={{ float: 'right', width: '35%' }}>{this.state.newEvent.invoice.priceTotal === undefined ? 0 : this.state.newEvent.invoice.priceTotal}€</label>\n                                                        </div>\n                                                        <div className=\"form-group center\" style={{ margin: '0px' }} >\n                                                            <label style={{ float: 'left', width: '35%' }}>To Reserve</label>\n                                                            <label style={{ float: 'center', width: '30%' }}>...</label>\n                                                            <label style={{ float: 'right', width: '35%' }}>{this.state.newEvent.invoice.priceReserve === undefined ? 0 : this.state.newEvent.invoice.priceReserve}€</label>\n                                                        </div>\n                                                    </div>\n\n                                                </div>\n                                            </div>\n                                        )\n                                    }\n\n                                    {/* \n                                    Service type != WALK \n                                     ->start date\n                                     ->End date\n                                     -> stay all night?\n                                        -> stay some Nitghts?\n                                            -> which nitghts?\n                                    */}\n                                    {\n                                        this.state.newEvent.service.type !== ServiceType.WALK && this.state.newEvent.service.type !== undefined && (\n                                            <div style={{ border: '1px solid #eee', textAlign: 'center' }}>\n                                                <label style={{ border: '1px solid #eee', width: '100%' }}> Guardería / Residencia</label>\n                                                <div className=\"form-group\" >\n\n                                                </div>\n                                            </div>\n                                        )\n                                    }\n\n\n                                    <div className=\"form-group\">\n                                        <button\n                                            className=\"btn btn-success btn-block center\"\n                                            disabled={this.state.loading}\n                                            style={{ width: '50%' }}\n                                        >\n                                            {this.state.loading && (\n                                                <span className=\"spinner-border spinner-border-sm\"></span>\n                                            )}\n                                            <span>{\"Reserve\"}</span>\n                                        </button>\n                                    </div>\n                                </div>\n                            )}\n\n                            {this.state.message && (\n                                <div className=\"form-group\">\n                                    {this.state.successful ?\n                                        <div className=\"alert alert-success\" role=\"alert\">\n                                            {this.state.message}\n                                        </div>\n                                        :\n                                        <div className=\"alert alert-danger\" role=\"alert\">\n                                            {this.state.message}\n                                        </div>}\n                                </div>\n                            )}\n                            <CheckButton\n                                style={{ display: \"none\" }}\n                                ref={c => {\n                                    this.checkBtn = c;\n                                }}\n                            />\n                            <Button type=\"button\" variant=\"primary\" className=\"center\" onClick={() => this.closeModal()}>Cancel</Button>\n                        </Form>\n                    </Modal.Body>\n\n                </Modal>\n\n            </div>\n        );\n    }\n}\n\n\n\n// {/* <div>{\n//     type === \"NEW_BY_BUTTON\" ?\n//         <div className=\"form-group hide\">\n//             <Dropdown className=\"center\" >\n//                 <Dropdown.Toggle style={{ width: '75%' }} variant=\"success\" id=\"dropdown-basic\">\n//                     {this.state.petChoose.size() >0 ? this.state.petChoose.name : \"Choose one pet\"}\n//                 </Dropdown.Toggle>\n//                 <Dropdown.Menu>\n//                     {\n//                         event.pets.map((pet, index) =>\n//                             <Dropdown.Item onClick={() =>\n//                                 this.setState(\n//                                     prevState => ({\n//                                         petChoose: pet,\n//                                         newEvent: {\n//                                             ...prevState.newEvent,\n//                                             title: \" Reserved\"\n//                                         }\n//                                     })\n//                                 )\n//                             } >{pet.name}</Dropdown.Item>)\n//                     }\n\n//                 </Dropdown.Menu>\n//             </Dropdown>\n//         </div>\n//         :\n//         <div className=\"form-group hide\">\n//             <label htmlFor=\"username\">Pet Name : </label>\n//             {\n//                 this.getPet()\n\n\n//             }\n//         </div>\n// } */}\n\n// <div className=\"form-group\">\n//     <label htmlFor=\"title\">Title</label>\n//     <Input\n//         type=\"text\"\n//         className=\"form-control\"\n//         name=\"title\"\n//         value={type === \"NEW\" ? this.state.newEvent.title : event ? event.title : this.state.newEvent.title}\n//         onChange={this.handleSetState}\n//         validations={[required]}\n//     />\n// </div>\n\n\n// <div className=\"form-group center\">\n//     <div className=\"form-group center\" style={{ display: '-webkit-box' }}>\n//         <div className=\"form-group center\">\n//             <label htmlFor=\"checkin\" style={{ width: '50%' }}>Check-In </label>\n//             <DatePicker\n//                 dateFormat=\"yyyy/MM/dd\"\n//                 selected={this.state.dataPicker.start}\n//                 onChange={this.handleStartDateChange}\n//                 showTimeSelect\n//                 dateFormat=\"Pp\"\n//                 minDate={new Date()}\n//                 // maxDate={addMonths(new Date(), 5)}\n//                 withPortal\n\n//             />\n//         </div>\n//         <div className=\"form-group center\">\n//             <label htmlFor=\"checkout\" style={{ width: '50%' }}>Check-Out </label>\n//             <DatePicker\n//                 dateFormat=\"yyyy/MM/dd\"\n//                 selected={this.state.dataPicker.end}\n//                 onChange={this.handleEndDateChange}\n//                 showTimeSelect\n//                 dateFormat=\"Pp\"\n//                 minDate={new Date()}\n//                 // maxDate={addMonths(new Date(), 5)}\n//                 withPortal\n//                 disabled={this.state.newEvent.start === undefined ? true : false}\n\n//             />\n//         </div>\n//     </div>\n//     <div className=\"form-group center\" style={{ display: '-webkit-box' }}>\n//         <div className=\"form-group center\">\n//             <label style={{ width: '100%' }}>\n//                 <input\n//                     type=\"checkbox\"\n//                     class=\"form-check-input\"\n//                     name=\"checkboxStayNight\"\n//                     checked={this.state.newEvent.stayOverAllNight}\n//                     onChange={()=>this.setState(\n//                         prevState => ({\n//                             newEvent: {\n//                                 ...prevState.newEvent,\n//                                 stayOverAllNight: !this.state.newEvent.stayOverAllNight\n//                             }\n//                         })\n//                     )}\n\n\n//                 />\n//             Pasar todas las noches?\n//         </label>\n//         </div>\n//         <div className=\"form-group center\">\n//             {!this.state.newEvent.stayOverAllNight && (<label style={{ width: '100%' }}>\n//                 <input\n//                     type=\"checkbox\"\n//                     class=\"form-check-input\"\n//                     name=\"checkboxStayNight\"\n//                     checked={this.state.newEvent.stayOverAllNight}\n//                     onChange={this.addPetInreserve}\n\n\n//                 />\n//            Algunas noches?\n//             </label>)}\n//         </div>\n//     </div>\n// </div>\n\n// {/* <div className=\"form-group\">\n//     <label htmlFor=\"username\">Color Event</label>\n\n// </div> */}\n\n\n\n// <div className=\"form-group center\" style={{ display: '-webkit-box' }}>\n\n//     <textarea\n//         placeholder={\"Write here, if exist something that we need know about \" +\n//             (this.state.petChoose !== undefined ? this.state.petChoose.name : \"\") + \" ...\"}\n//         multiple={true}\n//         className=\"form-control\"\n//         name=\"title\"\n//         value={this.state.newEvent.comments} // Optional.[String].Default: \"\".\n\n//     />\n\n// </div>\n{/* <div className=\"form-group center\" style={{ borderColor: '#92a8d1', width: '80%' }} >\n    <div className=\"form-group center\" style={{ margin: '0px' }} >\n        <label style={{ float: 'left', width: '35%' }}>Horas</label>\n        <label style={{ float: 'center', width: '30%' }}>...</label>\n        <label style={{ float: 'right', width: '35%' }}>{this.state.newEvent.numHours === undefined ? 0 : this.state.newEvent.numHours}</label>\n    </div>\n    <div className=\"form-group center\" style={{ margin: '0px' }} >\n        <label style={{ float: 'left', width: '35%' }}>Discount</label>\n        <label style={{ float: 'center', width: '30%' }}>...</label>\n        <label style={{ float: 'right', width: '35%' }}>0</label>\n    </div>\n    <div className=\"form-group center\" style={{ margin: '0px' }} >\n        <label style={{ float: 'left', width: '35%' }}>Total</label>\n        <label style={{ float: 'center', width: '30%' }}>...</label>\n        <label style={{ float: 'right', width: '35%' }}>{this.state.newEvent.price === undefined ? 0 : this.state.newEvent.price}€</label>\n    </div>\n</div> */}\n","import React, { Component } from 'react'\n\nimport Scheduler, { SchedulerData, ViewTypes, DATE_FORMAT } from 'react-big-scheduler'\n//include `react-big-scheduler/lib/css/style.css` for styles, link it in html or import it here\nimport 'react-big-scheduler/lib/css/style.css'\n// import './SchedulerBasic.css'\nimport moment from 'moment'\n\nimport EventModal from './EventModal'\n\nimport { DragDropContextProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\n\nimport AuthService from \"../../../../../services/auth.service\";\nimport ApiUserService from \"../../../../../services/api.user\";\n\n\n\nlet events = [\n        // {\n        //     id: 1,\n        //     start: '2021-7-4 09:30:00',\n        //     end: '2022-12-19 23:30:00',\n        //     resourceId: 'r1',\n        //     title: 'I am finished',\n        //     bgColor: '#D9D9D9'\n        // },\n    //     {\n    //         id: 2,\n    //         start: '2017-12-18 12:30:00',\n    //         end: '2017-12-26 23:30:00',\n    //         resourceId: 'r2',\n    //         title: 'I am not resizable',\n    //         resizable: false\n    //     },\n    //     {\n    //         id: 3,\n    //         start: '2017-12-19 12:30:00',\n    //         end: '2017-12-20 23:30:00',\n    //         resourceId: 'r3',\n    //         title: 'I am not movable',\n    //         movable: false\n    //     },\n    //     {\n    //         id: 4,\n    //         start: '2017-12-19 14:30:00',\n    //         end: '2017-12-20 23:30:00',\n    //         resourceId: 'r1',\n    //         title: 'I am not start-resizable',\n    //         startResizable: false\n    //     },\n    //     {\n    //         id: 5,\n    //         start: '2017-12-19 15:30:00',\n    //         end: '2017-12-20 23:30:00',\n    //         resourceId: 'r2',\n    //         title: 'R2 has recurring tasks every week on Tuesday, Friday',\n    //         rrule: 'FREQ=WEEKLY;DTSTART=20171219T013000Z;BYDAY=TU,FR',\n    //         bgColor: '#f759ab'\n    //     }\n];\n\nlet resources = [];\n\nexport default class SchedulerBasic extends Component {\n    constructor(props) {\n        super(props);\n\n\n\n        this.prevClick = this.prevClick.bind(this);\n        this.nextClick = this.nextClick.bind(this);\n        this.onSelectDate = this.onSelectDate.bind(this);\n        this.onViewChange = this.onViewChange.bind(this);\n        this.eventClicked = this.eventClicked.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.addEvent = this.addEvent.bind(this);\n        this.newEventByButton = this.newEventByButton.bind(this);\n\n        //2. create the view model, put it in the props obj\n        let schedulerData = new SchedulerData(new moment().format(DATE_FORMAT), ViewTypes.Week);\n        //set locale moment to the schedulerData, if your locale isn't English. By default, Scheduler comes with English(en, United States).\n        moment.locale('zh-cn');\n        schedulerData.setLocaleMoment(moment);\n        schedulerData.setResources(resources);\n        schedulerData.setEvents(events);\n        schedulerData.config.resourceName = \"My Pets Name\";\n\n        let width = (window.screen.width > 400 ? ((80 * window.screen.width) / 100) : window.screen.width);\n\n        schedulerData.config.schedulerWidth = width;\n       \n        this.state = {\n            viewModel: schedulerData,\n            allMyPetsData: {\n                count: 0,\n                rows: [undefined]\n            },\n            allReserves: {\n                count: 0,\n                rows: [undefined]\n            },\n            modal: {\n                title: 'Reserve',\n                show: false\n            },\n        }\n        \n\n\n    }\n\n    componentDidMount() {\n\n        const user = AuthService.getCurrentUser();\n        if (user) {\n\n            this.setState({\n                currentUser: user\n            });\n\n            const { allMyPetsData } = this.props;\n            if (allMyPetsData && allMyPetsData.count > 0) {\n\n                allMyPetsData.rows.map((pet) => {\n                    return this.addResource(pet)\n                });\n            }\n\n            ApiUserService.getMyReserves().then(\n                response => {\n                    console.log(\"getMyReserves response.data \", response.data)\n                    this.props.saveMyReserves(response.data);\n                    this.setState({\n                        allReserves: response.data\n                    });\n                    let schedulerData = this.state.viewModel;\n                    schedulerData.setEvents([]);\n                    this.setState({\n                        viewModel: schedulerData\n                    })\n                    this.state.allReserves.rows.map((event)=>{\n                        if(event !== undefined )\n                        this.addEvent(event)\n                    });\n            \n\n                },\n                error => {\n                    if (error.response) {\n                        // Request made and server responded\n                        // console.log(error.response.data);\n                        // console.log(error.response.status);\n                        // console.log(error.response.headers);\n                        if (error.response.status === 401) {\n                            AuthService.logout();\n                        }\n                    } else if (error.request) {\n                        // The request was made but no response was received\n                        // console.log(error.request);\n                    } else {\n                        // Something happened in setting up the request that triggered an Error\n                        // console.log('Error', error.message);\n                    }\n                }\n            );\n           \n        }\n    }\n\n\n    render() {\n\n        const { viewModel } = this.state;\n        let leftCustomHeader = (\n            <div>\n                <span style={{ fontWeight: 'bold' }}><a href=\"#\" onClick={() => this.newEventByButton()}>Add a reserve</a></span>\n            </div>\n        );\n\n\n        return (\n            <div   >\n\n                <EventModal\n                    title={this.state.modal.title}\n                    show={this.state.modal.show}\n                    type={this.state.modal.type}\n                    onClose={this.closeModal}\n                    event={this.state.newEvent}\n                    addEvent={this.addEvent}\n                />\n\n\n                <DragDropContextProvider backend={HTML5Backend}>\n                    <Scheduler schedulerData={viewModel}\n                        prevClick={this.prevClick}\n                        nextClick={this.nextClick}\n                        onSelectDate={this.onSelectDate}\n                        onViewChange={this.onViewChange}\n                        eventItemClick={this.eventClicked}\n                        viewEventClick={this.view}\n                        viewEventText=\"View\"\n                        viewEvent2Text=\"Remove\"\n                        viewEvent2Click={this.Remove}\n                        updateEventStart={this.updateEventStart}\n                        updateEventEnd={this.updateEventEnd}\n                        moveEvent={this.moveEvent}\n                        newEvent={this.newEvent}\n                        onScrollLeft={this.onScrollLeft}\n                        onScrollRight={this.onScrollRight}\n                        onScrollTop={this.onScrollTop}\n                        onScrollBottom={this.onScrollBottom}\n                        toggleExpandFunc={this.toggleExpandFunc}\n                        slotClickedFunc={this.slotClickedFunc}\n                        leftCustomHeader={leftCustomHeader}\n                    />\n                </DragDropContextProvider>\n            </div>\n        )\n    }\n\n    newEventByButton = () => {\n\n        let newFreshId = 0;\n        this.state.viewModel.events.forEach((item) => {\n            if (item.id >= newFreshId)\n                newFreshId = item.id + 1;\n        });\n        let newEvent = {\n            id: newFreshId,\n            title: '',\n            start: new Date(),\n            end: new Date(),\n            resourceId: [undefined],\n            bgColor: 'purple',\n            pets: this.props.allMyPetsData\n        }\n        console.log(\"newEventByButton\", newEvent);\n        this.setState(prevState => (\n            {\n                modal: {\n                    ...prevState.modal,\n                    show: true\n                },\n                newEvent: newEvent\n            }));\n    }\n    newEvent = (schedulerData, slotId, slotName, start, end, type, item) => {\n\n        let newFreshId = 0;\n        schedulerData.events.forEach((item) => {\n            if (item.id >= newFreshId)\n                newFreshId = item.id + 1;\n        });\n        let newEvent = {\n            id: newFreshId,\n            title: 'Reserved',\n            start: start,\n            end: end,\n            resourceId: [slotId],\n            bgColor: 'purple',\n            pets: this.props.allMyPetsData\n        }\n\n\n        this.setState(prevState => (\n            {\n                modal: {\n                    ...prevState.modal,\n                    show: true\n                },\n                newEvent: newEvent\n            }));\n\n\n        // if (window.confirm(`Do you want to create a new event? {slotId: ${slotId}, slotName: ${slotName}, start: ${start}, end: ${end}, type: ${type}, item: ${item}}`)) {\n\n        //     let newFreshId = 0;\n        //     schedulerData.events.forEach((item) => {\n        //         if (item.id >= newFreshId)\n        //             newFreshId = item.id + 1;\n        //     });\n\n        //     let newEvent = {\n        //         id: newFreshId,\n        //         title: 'New event you just created',\n        //         start: start,\n        //         end: end,\n        //         resourceId: slotId,\n        //         bgColor: 'purple'\n        //     }\n        //     schedulerData.addEvent(newEvent);\n        //     this.setState({\n        //         viewModel: schedulerData\n        //     })\n        // }\n    }\n\n    addResource = (resource) => {\n        let schedulerData = this.state.viewModel;\n        let newFreshId = resource.id;//schedulerData.resources.length + 1;\n        let newFreshName = resource.name;\n        schedulerData.addResource({ id: newFreshId, name: newFreshName, groupOnly: false });\n        this.setState({\n            viewModel: schedulerData\n        })\n    }\n\n    addEvent = (event) => {\n        let schedulerData = this.state.viewModel;\n        schedulerData.addEvent(\n            {\n                id: event.id,\n                title: event.title,\n                start: event.start,\n                end: event.end,\n                resourceId: event.resourceId,\n                bgColor: '#D9D9D9'\n            }\n        );\n        this.setState({\n            viewModel: schedulerData\n        })\n        events = schedulerData.events;\n    }\n\n    prevClick = (schedulerData) => {\n        schedulerData.prev();\n        schedulerData.setEvents(events);\n        this.setState({\n            viewModel: schedulerData\n        })\n    }\n\n    nextClick = (schedulerData) => {\n        schedulerData.next();\n        schedulerData.setEvents(events);\n        this.setState({\n            viewModel: schedulerData\n        })\n    }\n\n    onViewChange = (schedulerData, view) => {\n        schedulerData.setViewType(view.viewType, view.showAgenda, view.isEventPerspective);\n        schedulerData.setEvents(events);\n        this.setState({\n            viewModel: schedulerData\n        })\n    }\n\n    onSelectDate = (schedulerData, date) => {\n        schedulerData.setDate(date);\n        schedulerData.setEvents(events);\n        this.setState({\n            viewModel: schedulerData\n        })\n    }\n\n    eventClicked = (schedulerData, event) => {\n        // alert(`You just clicked an event: {id: ${event.id}, title: ${event.title}}`);\n    };\n\n    view = (schedulerData, event) => {\n        alert(`You just executed ops1 to event: {id: ${event.id}, title: ${event.title}}`);\n    };\n\n    Remove = (schedulerData, event) => {\n        alert(`You just executed ops2 to event: {id: ${event.id}, title: ${event.title}}`);\n        if (window.confirm(`Do you want to remove this event? {slotId: ${event.title},start: ${event.start}, end: ${event.end}, type: ${event.type}, item: ${event.item}}`)) {\n            ApiUserService.deleteReserve(event.id).then(\n                response => {\n                    // console.log(\"response.data \", response.data)\n                    this.props.saveMyReserves(response.data);\n                    this.setState({\n                        allReserves: response.data\n                    });\n                    this.removeEvent(event);\n                    this.state.allReserves.rows.map((event)=>{\n                        if(event !== undefined )\n                        this.addEvent(event)\n                    });\n                },\n                error => {\n                    if (error.response) {\n                        // Request made and server responded\n                        // console.log(error.response.data);\n                        // console.log(error.response.status);\n                        // console.log(error.response.headers);\n                        if (error.response.status === 401) {\n                            AuthService.logout();\n                        }\n                    } else if (error.request) {\n                        // The request was made but no response was received\n                        // console.log(error.request);\n                    } else {\n                        // Something happened in setting up the request that triggered an Error\n                        // console.log('Error', error.message);\n                    }\n                    this.setState({\n                        content:\n                            (error.response &&\n                                error.response.data &&\n                                error.response.data.message) ||\n                            error.message ||\n                            error.toString()\n                    });\n                }\n            );\n        }\n    };\n\n    removeEvent(event) {\n        let schedulerData = this.state.viewModel;\n        let index = schedulerData.events.indexOf(event);\n        if(index !== -1) {\n            schedulerData.events.splice(index, 1);\n            schedulerData._createRenderData();\n        }\n        this.setState({\n            viewModel: schedulerData\n        })\n    }\n\n    removeEventById(eventId) {\n        let index = -1;\n        this.events.forEach((item, idx) => {\n            if(item.id === eventId)\n                index = idx;\n        })\n        if(index !== -1) {\n            this.events.splice(index, 1);\n            this._createRenderData();\n        }\n    }\n\n   \n\n    updateEventStart = (schedulerData, event, newStart) => {\n        if (window.confirm(`Do you want to adjust the start of the event? {eventId: ${event.id}, eventTitle: ${event.title}, newStart: ${newStart}}`)) {\n            schedulerData.updateEventStart(event, newStart);\n        }\n        this.setState({\n            viewModel: schedulerData\n        })\n    }\n\n    updateEventEnd = (schedulerData, event, newEnd) => {\n        if (window.confirm(`Do you want to adjust the end of the event? {eventId: ${event.id}, eventTitle: ${event.title}, newEnd: ${newEnd}}`)) {\n            schedulerData.updateEventEnd(event, newEnd);\n        }\n        this.setState({\n            viewModel: schedulerData\n        })\n    }\n\n    moveEvent = (schedulerData, event, slotId, slotName, start, end) => {\n        if (window.confirm(`Do you want to move the event? {eventId: ${event.id}, eventTitle: ${event.title}, newSlotId: ${slotId}, newSlotName: ${slotName}, newStart: ${start}, newEnd: ${end}`)) {\n            schedulerData.moveEvent(event, slotId, slotName, start, end);\n            this.setState({\n                viewModel: schedulerData\n            })\n        }\n    }\n\n    onScrollRight = (schedulerData, schedulerContent, maxScrollLeft) => {\n        if (schedulerData.ViewTypes === ViewTypes.Day) {\n            schedulerData.next();\n            schedulerData.setEvents(events);\n            this.setState({\n                viewModel: schedulerData\n            });\n\n            schedulerContent.scrollLeft = maxScrollLeft - 10;\n        }\n    }\n\n    onScrollLeft = (schedulerData, schedulerContent, maxScrollLeft) => {\n        if (schedulerData.ViewTypes === ViewTypes.Day) {\n            schedulerData.prev();\n            schedulerData.setEvents(events);\n            this.setState({\n                viewModel: schedulerData\n            });\n\n            schedulerContent.scrollLeft = 10;\n        }\n    }\n\n    onScrollTop = (schedulerData, schedulerContent, maxScrollTop) => {\n        console.log('onScrollTop');\n    }\n\n    onScrollBottom = (schedulerData, schedulerContent, maxScrollTop) => {\n        console.log('onScrollBottom');\n    }\n\n    toggleExpandFunc = (schedulerData, slotId) => {\n        schedulerData.toggleExpandStatus(slotId);\n        this.setState({\n            viewModel: schedulerData\n        });\n    }\n    slotClickedFunc = (schedulerData, slot) => {\n        alert(`You just clicked a ${schedulerData.isEventPerspective ? 'task' : 'resource'}.{id: ${slot.slotId}, name: ${slot.slotName}}`);\n    }\n\n    closeModal() {\n        this.setState(prevState => {\n            let modal = Object.assign({}, prevState.modal);  // creating copy of state variable jasper\n            modal.show = false;                     // update the name property, assign a new value                 \n            return { modal };                                 // return new object jasper object\n        })\n    }\n\n}\n\n","import React, { Component } from 'react';\nimport SchedulerBasic from './SchedulerComponent/SchedulerBasic'\n\nexport default class ReserveBoard extends Component {\n    render() {\n        const { allMyPetsData } = this.props;\n       \n        return (\n            <div className=\"center\"  >\n                <h1 >Reserve</h1>\n               <SchedulerBasic allMyPetsData={allMyPetsData} saveMyReserves={this.props.saveMyReserves} />\n            </div>\n\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class SettingsBoard extends Component {\n    render() {\n        return (\n            <div className=\"center\"  >\n\n                <h1 >Settings</h1>\n                { localStorage.getItem(\"user\")} \n            </div> \n\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport './userBoardStyle.css'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n\nimport MyPetBoard from './myPet/MyPetBoard';\nimport HistoricBoard from './historic/Historic';\nimport ReserveBoard from './reserve/Reserve';\nimport SettingsBoard from './account/Settings';\n\nimport { AiOutlineSchedule, AiOutlineHistory } from \"react-icons/ai\";\nimport { RiAccountCircleFill } from \"react-icons/ri\";\nimport { GiJumpingDog } from \"react-icons/gi\";\n\n\n\nexport default class Profile extends Component {\n\n    constructor(props) {\n        super(props);\n        this.changeComponent = this.changeComponent.bind(this);\n        this.saveAllMyPetsData = this.saveAllMyPetsData.bind(this);\n        this.saveMyReserves = this.saveMyReserves.bind(this);\n\n        this.state = {\n            component: \"#mypet\",\n            allMyPetsData: {\n                count: 0,\n                rows: [undefined]\n            },\n            allReserves: undefined\n        };\n    }\n\n    componentDidMount() {\n\n    }\n\n\n    changeComponent(e) {\n        console.log(\"changeComponent : \", e.target.hash);\n        this.setState({\n            component: e.target.hash\n        });\n    }\n    saveAllMyPetsData(allPets) {\n        this.setState({\n            allMyPetsData: allPets\n        });\n    }\n    saveMyReserves(reserves) {\n        this.setState({\n            allReserves: reserves\n        });\n    }\n    render() {\n        return (\n            <div className=\" maxSize\">\n\n                <Navbar className=\" \" expand=\"lg\" style={{ width: '75%', backgroundColor: '#99e699', margin: 'auto', fontSize: '120%' }}>\n                    <Navbar.Brand >\n                        <Link to={\"#mypet\"} onClick={this.changeComponent} className=\"navbar-brand\">\n                            <GiJumpingDog /> Profile\n                    </Link>\n                    </Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav2\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav2\">\n\n                        <Nav className=\"mr-auto\">\n                            <Link to={\"#reserve\"} onClick={this.changeComponent} className=\"nav-link\">\n                                <AiOutlineSchedule /> Reserves\n                            </Link>\n\n                            <Link to={\"#history\"} onClick={this.changeComponent} className=\"nav-link\">\n                                <AiOutlineHistory /> History\n                                </Link>\n                        </Nav>\n                        <Nav className=\"ml-auto\">\n                            <Link to={\"#settings\"} onClick={this.changeComponent} className=\"nav-link\">\n                                <RiAccountCircleFill /> Account\n                            </Link>\n                        </Nav>\n\n                    </Navbar.Collapse>\n                </Navbar>\n\n                {\n                    this.state.component === \"#mypet\" ?\n                        <MyPetBoard saveAllMyPetsData={this.saveAllMyPetsData} allMyPetsData={this.state.allMyPetsData} />\n                        : this.state.component === \"#reserve\" ?\n                            <ReserveBoard saveMyReserves={this.saveMyReserves} allMyPetsData={this.state.allMyPetsData} />\n                            : this.state.component === \"#history\" ?\n                                <HistoricBoard />\n                                : this.state.component === \"#settings\" ?\n                                    <SettingsBoard />\n                                    : null\n                }\n\n\n\n            </div>\n\n        )\n    }\n}\n\n\n","import React, { Component } from 'react';\n\nexport default class ReportsBoard extends Component {\n    render() {\n        return (\n            <div className=\"center\"  >\n\n                <h1 >Reports Board</h1>\n                ->lista de reservas futuras\n                >\n\n               \n            </div> \n\n        )\n    }\n}","import axios from \"axios\";\nimport authHeader from './auth-header';\nimport {API_URL_PETSITER,API_URL_ADMIN} from '../Constants'\n// const API_URL = \"http://192.168.0.10:3001/api/pet/\";\n// const API_URL = \"http://localhost:3001/api/admin/\";\n\n\nclass ApiPetSiterService {\n\n    getAdminOpenReserves(){\n        return axios.get(API_URL_ADMIN + \"openReserves\", { headers: authHeader() });\n    }\n   \n    getOpenReserves(){\n        return axios.get(API_URL_PETSITER + \"openReserves\", { headers: authHeader() });\n    }\n}\nexport default new ApiPetSiterService();","import React, { Component } from 'react'\n\nimport Scheduler, { SchedulerData, ViewTypes, DATE_FORMAT } from 'react-big-scheduler'\nimport 'react-big-scheduler/lib/css/style.css'\n// import './SchedulerBasic.css'\nimport moment from 'moment'\n\nimport AuthService from \"../../../../../services/auth.service\";\nimport ApiPetSiterService from \"../../../../../services/api.petsiter\";\n\nimport { DragDropContextProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\n\n//set resources here or later\nlet resources = [\n\n];\n//set events here or later,\n//the event array should be sorted in ascending order by event.start property, otherwise there will be some rendering errors\nlet events = [\n\n];\n\n\nexport default class SchedulerOpenReserves extends Component {\n    constructor(props) {\n        super(props);\n\n        this.prevClick = this.prevClick.bind(this);\n        this.nextClick = this.nextClick.bind(this);\n        this.onSelectDate = this.onSelectDate.bind(this);\n        this.onViewChange = this.onViewChange.bind(this);\n        this.eventClicked = this.eventClicked.bind(this);\n\n\n        //2. create the view model, put it in the props obj\n        let schedulerData = new SchedulerData(new moment().format(DATE_FORMAT), ViewTypes.Week);\n        //set locale moment to the schedulerData, if your locale isn't English. By default, Scheduler comes with English(en, United States).\n        moment.locale('zh-cn');\n        schedulerData.setLocaleMoment(moment);\n        schedulerData.setResources(resources);\n        schedulerData.setEvents(events);\n\n\n        let width = (window.screen.width > 400 ? ((80 * window.screen.width) / 100) : window.screen.width);\n\n        schedulerData.config.schedulerWidth = width;\n\n        this.state = {\n            viewModel: schedulerData,\n            allOpenReserves: [undefined]\n        \n        }\n    }\n\n    componentDidMount() {\n\n        const user = AuthService.getCurrentUser();\n        if (user) {\n\n            this.setState({\n                currentUser: user\n            });\n\n            ApiPetSiterService.getAdminOpenReserves().then(\n                response => {\n                    console.log(\"getOpenReserves response.data \", response.data)\n\n                    this.props.saveOpenReserves(response.data);\n\n                    this.setState({\n                        allOpenReserves: response.data\n                    });\n\n                    let schedulerData = this.state.viewModel;\n                    schedulerData.setEvents([]);\n                    this.setState({\n                        viewModel: schedulerData\n                    })\n                    if ( this.state.allOpenReserves !== undefined) {\n                        this.state.allOpenReserves.map((R) => {\n                            console.log(R);\n                            this.addResource(R.pet);\n                            this.addEvent(R);\n                           \n                        });\n                    }\n                },\n                error => {\n                  \n                    if (error.response) {\n                        // Request made and server responded\n                        // console.log(error.response.data);\n                        // console.log(error.response.status);\n                        // console.log(error.response.headers);\n                        if (error.response.status === 401 || error.response.status === 403) {\n                            AuthService.logout();\n                        }\n                    } else if (error.request) {\n                        // The request was made but no response was received\n                        // console.log(error.request);\n                    } else {\n                        // Something happened in setting up the request that triggered an Error\n                        // console.log('Error', error.message);\n                    }\n                }\n            );\n\n        }\n    }\n\n\n    render() {\n        const { viewModel } = this.state;\n        return (\n            <div >\n\n\n                <DragDropContextProvider backend={HTML5Backend}>\n                    <Scheduler schedulerData={viewModel}\n                        prevClick={this.prevClick}\n                        nextClick={this.nextClick}\n                        onSelectDate={this.onSelectDate}\n                        onViewChange={this.onViewChange}\n                        eventItemClick={this.eventClicked}\n                        viewEventClick={this.ops1}\n                        viewEventText=\"Ops 1\"\n                        viewEvent2Text=\"Ops 2\"\n                        viewEvent2Click={this.ops2}\n                        updateEventStart={this.updateEventStart}\n                        updateEventEnd={this.updateEventEnd}\n                        moveEvent={this.moveEvent}\n                        newEvent={this.newEvent}\n                        onScrollLeft={this.onScrollLeft}\n                        onScrollRight={this.onScrollRight}\n                        onScrollTop={this.onScrollTop}\n                        onScrollBottom={this.onScrollBottom}\n                        toggleExpandFunc={this.toggleExpandFunc}\n                    />\n                </DragDropContextProvider>\n\n             \n            </div>\n        )\n    }\n\n\n    addResource = (resource) => {\n        console.log(resource);\n        let schedulerData = this.state.viewModel;\n        let newFreshId = resource.id;//schedulerData.resources.length + 1;\n        let newFreshName = resource.name+\"[\"+resource.user.username+\"]\";\n        schedulerData.addResource({ id: newFreshId, name: newFreshName, groupOnly: false });\n        this.setState({\n            viewModel: schedulerData\n        })\n    }\n\n    addEvent = (event) => {\n        let schedulerData = this.state.viewModel;\n        schedulerData.addEvent(\n            {\n                id: event.id,\n                title: event.title,\n                start: event.start,\n                end: event.end,\n                resourceId: event.resourceId,\n                bgColor: '#D9D9D9'\n            }\n        );\n        this.setState({\n            viewModel: schedulerData\n        })\n        events = schedulerData.events;\n    }\n\n    prevClick = (schedulerData) => {\n        schedulerData.prev();\n        schedulerData.setEvents(events);\n        this.setState({\n            viewModel: schedulerData\n        })\n    }\n\n    nextClick = (schedulerData) => {\n        schedulerData.next();\n        schedulerData.setEvents(events);\n        this.setState({\n            viewModel: schedulerData\n        })\n    }\n\n    onViewChange = (schedulerData, view) => {\n        schedulerData.setViewType(view.viewType, view.showAgenda, view.isEventPerspective);\n        schedulerData.setEvents(events);\n        this.setState({\n            viewModel: schedulerData\n        })\n    }\n\n    onSelectDate = (schedulerData, date) => {\n        schedulerData.setDate(date);\n        schedulerData.setEvents(events);\n        this.setState({\n            viewModel: schedulerData\n        })\n    }\n\n    eventClicked = (schedulerData, event) => {\n        alert(`You just clicked an event: {id: ${event.id}, title: ${event.title}}`);\n    };\n\n    ops1 = (schedulerData, event) => {\n        alert(`You just executed ops1 to event: {id: ${event.id}, title: ${event.title}}`);\n    };\n\n    ops2 = (schedulerData, event) => {\n        alert(`You just executed ops2 to event: {id: ${event.id}, title: ${event.title}}`);\n    };\n\n    newEvent = (schedulerData, slotId, slotName, start, end, type, item) => {\n        if (window.confirm(`Do you want to create a new event? {slotId: ${slotId}, slotName: ${slotName}, start: ${start}, end: ${end}, type: ${type}, item: ${item}}`)) {\n\n            let newFreshId = 0;\n            schedulerData.events.forEach((item) => {\n                if (item.id >= newFreshId)\n                    newFreshId = item.id + 1;\n            });\n\n            let newEvent = {\n                id: newFreshId,\n                title: 'New event you just created',\n                start: start,\n                end: end,\n                resourceId: slotId,\n                bgColor: 'purple'\n            }\n            schedulerData.addEvent(newEvent);\n            this.setState({\n                viewModel: schedulerData\n            })\n        }\n    }\n\n    updateEventStart = (schedulerData, event, newStart) => {\n        if (window.confirm(`Do you want to adjust the start of the event? {eventId: ${event.id}, eventTitle: ${event.title}, newStart: ${newStart}}`)) {\n            schedulerData.updateEventStart(event, newStart);\n        }\n        this.setState({\n            viewModel: schedulerData\n        })\n    }\n\n    updateEventEnd = (schedulerData, event, newEnd) => {\n        if (window.confirm(`Do you want to adjust the end of the event? {eventId: ${event.id}, eventTitle: ${event.title}, newEnd: ${newEnd}}`)) {\n            schedulerData.updateEventEnd(event, newEnd);\n        }\n        this.setState({\n            viewModel: schedulerData\n        })\n    }\n\n    moveEvent = (schedulerData, event, slotId, slotName, start, end) => {\n        if (window.confirm(`Do you want to move the event? {eventId: ${event.id}, eventTitle: ${event.title}, newSlotId: ${slotId}, newSlotName: ${slotName}, newStart: ${start}, newEnd: ${end}`)) {\n            schedulerData.moveEvent(event, slotId, slotName, start, end);\n            this.setState({\n                viewModel: schedulerData\n            })\n        }\n    }\n\n    onScrollRight = (schedulerData, schedulerContent, maxScrollLeft) => {\n        if (schedulerData.ViewTypes === ViewTypes.Day) {\n            schedulerData.next();\n            schedulerData.setEvents(events);\n            this.setState({\n                viewModel: schedulerData\n            });\n\n            schedulerContent.scrollLeft = maxScrollLeft - 10;\n        }\n    }\n\n    onScrollLeft = (schedulerData, schedulerContent, maxScrollLeft) => {\n        if (schedulerData.ViewTypes === ViewTypes.Day) {\n            schedulerData.prev();\n            schedulerData.setEvents(events);\n            this.setState({\n                viewModel: schedulerData\n            });\n\n            schedulerContent.scrollLeft = 10;\n        }\n    }\n\n    onScrollTop = (schedulerData, schedulerContent, maxScrollTop) => {\n        console.log('onScrollTop');\n    }\n\n    onScrollBottom = (schedulerData, schedulerContent, maxScrollTop) => {\n        console.log('onScrollBottom');\n    }\n\n    toggleExpandFunc = (schedulerData, slotId) => {\n        schedulerData.toggleExpandStatus(slotId);\n        this.setState({\n            viewModel: schedulerData\n        });\n    }\n\n}\n\n","import React, { Component } from 'react';\nimport { Table, Dropdown, Button } from 'react-bootstrap';\n\nexport default class OpenReserveTableComp extends Component {\n    render() {\n        return (\n            <div className=\"center\"  >\n                <h1 >Open Reserve Table </h1>\n\n                <Table striped bordered hover size=\"sm\" responsive>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Owner</th>\n                            <th>Pet</th>\n                            <th>Check-In</th>\n                            <th>Check-Out</th>\n                            <th>Check-In</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>1</td>\n                            <td>Mark</td>\n                            <td>Otto</td>\n                            <td>@mdo</td>\n                        </tr>\n                        <tr>\n                            <td>2</td>\n                            <td>Jacob</td>\n                            <td>Thornton</td>\n                            <td>@fat</td>\n                        </tr>\n                        <tr>\n                            <td>3</td>\n                            <td colSpan=\"2\">Larry the Bird</td>\n                            <td>@twitter</td>\n                        </tr>\n                    </tbody>\n                </Table>\n\n            </div>\n\n        )\n    }\n}","import React, { Component } from 'react';\nimport SchedulerOpenReserves from './SchedulerComponent/SchedulerOpenReserves'\nimport OpenReserveTableComp from './OpenReservesTable/OpenReserveTableComp'\n\nexport default class ReserveBoard extends Component {\n    constructor(props) {\n        super(props);\n        this.saveOpenReserves = this.saveOpenReserves.bind(this);\n        this.state = {\n            component: \"#reserves\",\n            allOpenReserves: undefined\n        };\n    }\n\n    saveOpenReserves(reserves) {\n        this.setState({\n            allOpenReserves: reserves\n        });\n    }\n    render() {\n        return (\n            <div className=\"center\" id=\"reserve-content\" >\n                <h1 >Reserve</h1>\n               <SchedulerOpenReserves saveOpenReserves={this.saveOpenReserves} />\n               <OpenReserveTableComp/>\n            </div>\n\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class HistoricBoard extends Component {\n    render() {\n        return (\n            <div className=\"center\"  >\n                <h1 >Historic </h1>\n            </div> \n\n        )\n    }\n}","import React, { Component } from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport { Link } from \"react-router-dom\";\n\n\nimport { AiOutlineSchedule, AiOutlineHistory } from \"react-icons/ai\";\nimport { RiAccountCircleFill } from \"react-icons/ri\";\nimport { GiJumpingDog } from \"react-icons/gi\";\n\nimport ReportsBoard from './reports/ReportsBoard'\nimport ReserveBoard from './reserve/Reserve'\nimport HistoricBoard from './historic/Historic'\n\nexport default class ModeratorBoard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.changeComponent = this.changeComponent.bind(this);\n      \n        this.state = {\n            component: \"#reserves\"\n        };\n    }\n\n    changeComponent(e) {\n        console.log(\"changeComponent : \", e.target.hash);\n        this.setState({\n            component: e.target.hash\n        });\n    }\n    \n\n\n    render() {\n        return (\n\n            <div className=\"center maxSize\">\n\n                <Navbar className=\" \" expand=\"lg\" style={{ width: '75%', backgroundColor: '#99e699', margin: 'auto', fontSize: '120%' }}>\n                    <Navbar.Brand >\n                        <Link to={\"#reserves\"} onClick={this.changeComponent} className=\"navbar-brand\">\n                            <AiOutlineHistory /> Reserves\n                        </Link>\n                    </Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav2\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav2\">\n\n                        <Nav className=\"mr-auto\">\n\n                            <Link to={\"#reports\"} onClick={this.changeComponent} className=\"navbar-brand\">\n                                <GiJumpingDog /> Reports\n                            </Link>\n\n\n\n                            <Link to={\"#historic\"} onClick={this.changeComponent} className=\"navbar-brand\">\n                                <AiOutlineSchedule /> History\n                                </Link>\n                        </Nav>\n\n\n                    </Navbar.Collapse>\n                </Navbar>\n\n\n\n                {\n                    this.state.component === \"#reserves\" ?\n                        <ReserveBoard />\n                        : this.state.component === \"#reports\" ?\n                            <ReportsBoard />\n                            : this.state.component === \"#historic\" ?\n                                <HistoricBoard />\n                                : null\n\n                }\n\n\n\n            </div>\n        )\n    }\n}","import axios from \"axios\";\nimport authHeader from './auth-header';\nimport {API_URL_ADMIN} from '../Constants'\n// const API_URL = \"http://192.168.0.10:3001/api/pet/\";\n// const API_URL = \"http://localhost:3001/api/admin/\";\n\n\nclass ApiAdminService {\n\n    getUsersContent() {\n        return axios.get(API_URL_ADMIN + 'users', { headers: authHeader() });\n    }\n\n    getServiceTaxContent() {\n        return axios.get(API_URL_ADMIN + 'servicetax', { headers: authHeader() });\n    }\n    updateServiceTax(service) {\n        return axios.post(API_URL_ADMIN + \"servicetax\", {service}, { headers: authHeader() });\n    }\n}\nexport default new ApiAdminService();","import React, { Component } from 'react';\n\n\nimport { Table, Dropdown, Button } from 'react-bootstrap';\n\nimport AuthService from \"../../../../services/auth.service\";\nimport ApiAdminService from \"../../../../services/api.admin\";\n\nexport default class BusinessBoard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            serviceTax: undefined,\n\n        }\n    }\n\n    componentDidMount() {\n        const user = AuthService.getCurrentUser();\n        if (user) {\n            this.setState({\n                currentUser: user\n            });\n\n            ApiAdminService.getServiceTaxContent().then(\n                response => {\n                    console.log(\"ServiceTax response.data \", response.data)\n\n                    this.setState({\n                        serviceTax: response.data\n                    });\n                },\n                error => {\n                    if (error.response) {\n                        // Request made and server responded\n                        console.log(error.response);\n                        // console.log(error.response.status);\n                        // console.log(error.response.headers);\n                        if (error.response.status === 401 || error.response.status === 403) {\n                            AuthService.logout();\n                        }\n                    } else if (error.request) {\n                        // The request was made but no response was received\n                        console.log(error.request);\n                    } else {\n                        // Something happened in setting up the request that triggered an Error\n                        console.log('Error', error.message);\n                    }\n\n                }\n            );\n        }\n    }\n    render() {\n\n        const { serviceTax } = this.state;\n        return (\n            <div className=\"center\"  >\n                <h1 >Business Board </h1>\n\n                <Table bordered hover size=\"sm\" responsive>\n                    <thead>\n                        <tr>\n                            <th>  </th>\n\n                            {\n                                serviceTax && (\n                                    serviceTax.map((tax) =>\n                                        tax.type === \"Paseo_ind\" && (\n                                            <th> {tax.hours} Hora </th>\n                                        )\n                                    )\n\n                                )\n                            }\n                           \n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>Paseo Individual</td>\n                            {\n                                serviceTax && (\n                                    serviceTax.map((tax) =>\n                                        tax.type === \"Paseo_ind\" && (\n                                            <td>\n                                                <input\n                                                    type=\"text\"\n                                                    value={tax.priceHour}\n                                                />\n                                        €\n                                            </td>\n\n\n                                        )\n                                    )\n\n                                )\n                            }\n\n                        </tr>\n                        <tr>\n                            <td>Paseo Grupo</td>\n                            {\n                                serviceTax && (\n                                    serviceTax.map((tax) =>\n                                        tax.type === \"Paseo_group\" && (\n                                            <td>\n                                                <input\n                                                    type=\"text\"\n                                                    value={tax.priceHour}\n                                                />€\n                                            </td>)\n                                    )\n\n                                )\n                            }\n                        </tr>\n\n                        <tr>\n                            <Button>Save</Button>\n                        </tr>\n                    </tbody>\n                </Table>\n\n                <Table striped bordered hover size=\"sm\" responsive>\n                    <thead>\n                        <tr>\n                            <th>  </th>\n                            {\n                            serviceTax && (\n                                serviceTax.map((tax) =>\n\n                                    tax.type === \"aloj\" ? (\n                                        <th>1 - {tax.hours} Hora(s) </th> \n                                        \n                                    )\n                                    : tax.type === \"aloj_extra\" &&(\n                                        <th>1 - {tax.hours} Hora(s) </th> \n                                    )\n                                ))\n                        }\n                        </tr>\n\n                       \n\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>Alojamiento</td>\n                            <td>alo_tax_1</td>\n                            <td>alo_tax_2</td>\n                            <td>alo_tax_extra</td>\n                        </tr>\n\n                    </tbody>\n                </Table>\n                <Table striped bordered hover size=\"sm\" responsive>\n                    <thead>\n                        <tr>\n                            <th>  </th>\n                            <th>1-24 Hora(s)</th>\n                            <th> 1 Hora extra</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>Guardiria</td>\n                            <td>gua_tax_1</td>\n                            <td>gua_tax_extra</td>\n                        </tr>\n\n                    </tbody>\n                </Table>\n\n            </div>\n\n        )\n    }\n}","import React, { Component } from 'react';\n\nimport { Table, Dropdown, Button } from 'react-bootstrap';\n\nimport AuthService from \"../../../../services/auth.service\";\nimport ApiAdminService from \"../../../../services/api.admin\";\n\n\nimport { PermissionsOptions } from '../../../../Constants'\n\n\n\nexport default class PermissionsBoard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            usersContent: {\n                count: 0,\n                rows: [undefined]\n            },\n            toSave: false\n        }\n    }\n\n\n    componentDidMount() {\n        const user = AuthService.getCurrentUser();\n        if (user) {\n            this.setState({\n                currentUser: user\n            });\n\n            ApiAdminService.getUsersContent().then(\n                response => {\n                    console.log(\"response.data \", response.data)\n\n                    this.setState({\n                        usersContent: response.data\n                    });\n                },\n                error => {\n                    if (error.response) {\n                        // Request made and server responded\n                        console.log(error.response);\n                        // console.log(error.response.status);\n                        // console.log(error.response.headers);\n                        if (error.response.status === 401 || error.response.status === 403) {\n                            AuthService.logout();\n                        }\n                    } else if (error.request) {\n                        // The request was made but no response was received\n                        console.log(error.request);\n                    } else {\n                        // Something happened in setting up the request that triggered an Error\n                        console.log('Error', error.message);\n                    }\n\n                }\n            );\n        }\n    }\n\n\n    render() {\n\n        const { usersContent } = this.state;\n\n        return (\n            <div className=\"center\"  >\n                <h1 >Permissions</h1>\n                <Table responsive style={{ minWidth: '100%' }}>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>User</th>\n                            <th>Email</th>\n                            <th>Subscribe Date </th>\n                            <th>Last Change</th>\n                            <th>Permission</th>\n                            <th></th>\n\n                        </tr>\n                    </thead>\n                    <tbody>\n\n                        {\n                            usersContent.rows.map((obj) => (\n\n                                obj !== undefined ?\n\n                                    obj.user !== undefined ?\n\n                                        <tr>\n                                            <td>{obj.user.id}</td>\n                                            <td >{obj.user.username}</td>\n                                            <td >{obj.user.email}</td>\n                                            <td >{obj.user.createdAt}</td>\n                                            <td >{obj.user.updatedAt}</td>\n                                            <td>\n                                                <Dropdown className=\"center\" >\n                                                    <Dropdown.Toggle style={{ width: '75%' }} variant=\"success\" id=\"dropdown-basic\">\n                                                        {obj.roleId !== undefined ? Object.keys(PermissionsOptions)[obj.roleId] : Object.keys(PermissionsOptions)[0]}\n                                                    </Dropdown.Toggle>\n                                                    <Dropdown.Menu>\n                                                        {\n                                                            Object.keys(PermissionsOptions).map((P) => <Dropdown.Item onClick={() => this.setState({ toSave: true })} > {P}</Dropdown.Item>)\n                                                        }\n\n                                                    </Dropdown.Menu>\n                                                </Dropdown>\n                                            </td>\n                                            <td key={obj.user.id}>\n\n                                                <Button enable={!this.state.toSave}>Save</Button></td>\n                                        </tr>\n                                        //    console.log(\"OBJ\",obj.id)\n                                        : null\n                                    : null\n                            ))\n                        }\n\n                    </tbody>\n                </Table>\n\n\n                </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport { Link } from \"react-router-dom\";\n\n\nimport { AiOutlineSchedule, AiOutlineHistory } from \"react-icons/ai\";\nimport { RiAccountCircleFill } from \"react-icons/ri\";\nimport { GiJumpingDog } from \"react-icons/gi\";\n\n\n//COmponents\nimport ReportBoard from './reports/ReportBoard';\nimport BusinessBoard from './business/BusinessBoard';\nimport PermissionsBoard from './permissions/PermissionsBoard';\n\n\n\nexport default class AdminBoard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.changeComponent = this.changeComponent.bind(this);\n        this.state = {\n            component: \"#permissions\",\n        }\n    }\n\n    changeComponent(e) {\n        console.log(\"changeComponent : \", e.target.hash);\n        this.setState({\n            component: e.target.hash\n        });\n    }\n\n\n\n    render() {\n\n\n\n        return (\n\n\n            <div className=\" maxSize\">\n\n                <Navbar className=\" \" expand=\"lg\" style={{ width: '75%', backgroundColor: '#99e699', margin: 'auto', fontSize: '120%' }}>\n                    <Navbar.Brand >\n                        <Link to={\"#reports\"} onClick={this.changeComponent} className=\"navbar-brand\">\n                            <GiJumpingDog /> Reports\n                            </Link>\n                    </Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav2\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav2\">\n\n                        <Nav className=\"mr-auto\">\n\n                            <Link to={\"#business\"} onClick={this.changeComponent} className=\"nav-link\">\n                                <AiOutlineHistory /> Business\n                                </Link>\n\n                            <Link to={\"#permissions\"} onClick={this.changeComponent} className=\"nav-link\">\n                                <AiOutlineSchedule /> Permissions\n                                </Link>\n                        </Nav>\n\n\n                    </Navbar.Collapse>\n                </Navbar>\n\n                {\n                    this.state.component === \"#reports\" ?\n                        <ReportBoard />\n                        : this.state.component === \"#business\" ?\n                            <BusinessBoard />\n                            : this.state.component === \"#permissions\" ?\n                                <PermissionsBoard />\n\n                                : null\n                }\n\n\n\n            </div>\n\n\n\n        )\n    }\n}","import React, { Component } from 'react';\n\nimport Row from 'react-bootstrap/Row';\n\nimport './Content.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n\n//Components Pages\nimport Home from './home/Home';\nimport Login from '../auth/Login';\nimport About from './about/About';\nimport Register from '../auth/Register';\nimport Profile from '../auth/user/Profile';\nimport BoardModerator from \"../auth/moderator/ModeratorBoard\";\nimport BoardAdmin from \"../auth/admin/AdminBoard\";\n\n\nimport AuthService from \"../../services/auth.service\";\n\nexport default class Content extends Component {\n\n  constructor(props) {\n    super(props);\n\n\n    this.state = {\n      // showModeratorBoard: false,\n      // showAdminBoard: false,\n      currentUser: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        // showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n        // showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n      });\n    }\n  }\n\n\n  render() {\n    const { currentUser } = this.state;\n    return (\n      <Row md={4} style={{top:'200px'}}>\n\n        <Router>\n\n          {currentUser ? (\n            <Switch>\n              <Route exact path={[\"/\", \"/home\"]} component={Home} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/profile\" component={Profile} />\n              <Route path=\"/mod\" component={BoardModerator} />\n              <Route path=\"/admin\" component={BoardAdmin} />\n              {/* <Route exact path=\"/*\" component={Home} /> */}\n            </Switch>\n          ) : (\n\n              <Switch>\n                <Route exact path={[\"/\", \"/home\",\"/logout\"]} component={Home} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/register\" component={Register} />\n                {/* <Route exact path=\"/*\" component={Home} /> */}\n              </Switch>\n\n            )}\n\n        </Router>\n\n      </Row>\n\n    )\n  }\n}","import React, { Component } from 'react'\n// import Row from 'react-bootstrap/Row';\n\nimport \"./Footer.css\"\n\nexport default class Footer extends Component {\n  render() {\n    return (\n\n      <footer className=\"fixed-bottom site-footer \">\n\n\n        <p>\n          Site developed by LuisPontes &copy;{\" \"}\n          {new Date().getFullYear().toString()}{\" \"}\n        </p>\n\n      </footer>\n\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Container from 'react-bootstrap/Container';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import Row from 'react-bootstrap/Row';\n// import Col from 'react-bootstrap/Col';\n\n//components\nimport Header from './components/layout/Header'\nimport Content from './components/layout/Content'\nimport Footer from './components/layout/Footer'\n\n\n\nReactDOM.render(\n  // <React.StrictMode>\n<React.Fragment>\n    <Container>\n\n      <Header />\n\n      <Content >\n\n      </Content>\n      \n      <Footer />\n\n    </Container>\n\n\n \n  </React.Fragment>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}